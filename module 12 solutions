{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"collapsed_sections":[],"mount_file_id":"1k95BcJ9Yqc0Femcx3j2BZiMDy08mtKmH","authorship_tag":"ABX9TyMUELVtml4kcH52VGpLlOFY"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hkdRobpCf895","executionInfo":{"status":"ok","timestamp":1662090454745,"user_tz":-330,"elapsed":22552,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"9e2879b6-c2e1-40b2-f481-c92968707395"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"code","source":["import numpy as np\n","import pandas as pd \n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","import warnings\n","warnings.filterwarnings('ignore')"],"metadata":{"id":"wko_4UZieO0p"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df=pd.read_csv('/content/tested.csv')"],"metadata":{"id":"o-GCgT1IhasJ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":502},"id":"P1LyEPnnhrWo","executionInfo":{"status":"ok","timestamp":1662092411392,"user_tz":-330,"elapsed":23,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"8cb1a02f-64b0-4935-fee4-01429204aa5d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     PassengerId  Survived  Pclass  \\\n","0            892         0       3   \n","1            893         1       3   \n","2            894         0       2   \n","3            895         0       3   \n","4            896         1       3   \n","..           ...       ...     ...   \n","413         1305         0       3   \n","414         1306         1       1   \n","415         1307         0       3   \n","416         1308         0       3   \n","417         1309         0       3   \n","\n","                                             Name     Sex   Age  SibSp  Parch  \\\n","0                                Kelly, Mr. James    male  34.5      0      0   \n","1                Wilkes, Mrs. James (Ellen Needs)  female  47.0      1      0   \n","2                       Myles, Mr. Thomas Francis    male  62.0      0      0   \n","3                                Wirz, Mr. Albert    male  27.0      0      0   \n","4    Hirvonen, Mrs. Alexander (Helga E Lindqvist)  female  22.0      1      1   \n","..                                            ...     ...   ...    ...    ...   \n","413                            Spector, Mr. Woolf    male   NaN      0      0   \n","414                  Oliva y Ocana, Dona. Fermina  female  39.0      0      0   \n","415                  Saether, Mr. Simon Sivertsen    male  38.5      0      0   \n","416                           Ware, Mr. Frederick    male   NaN      0      0   \n","417                      Peter, Master. Michael J    male   NaN      1      1   \n","\n","                 Ticket      Fare Cabin Embarked  \n","0                330911    7.8292   NaN        Q  \n","1                363272    7.0000   NaN        S  \n","2                240276    9.6875   NaN        Q  \n","3                315154    8.6625   NaN        S  \n","4               3101298   12.2875   NaN        S  \n","..                  ...       ...   ...      ...  \n","413           A.5. 3236    8.0500   NaN        S  \n","414            PC 17758  108.9000  C105        C  \n","415  SOTON/O.Q. 3101262    7.2500   NaN        S  \n","416              359309    8.0500   NaN        S  \n","417                2668   22.3583   NaN        C  \n","\n","[418 rows x 12 columns]"],"text/html":["\n","  <div id=\"df-d3b61991-6c74-4111-bc16-95abc152b84c\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Name</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Ticket</th>\n","      <th>Fare</th>\n","      <th>Cabin</th>\n","      <th>Embarked</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>892</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Kelly, Mr. James</td>\n","      <td>male</td>\n","      <td>34.5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>330911</td>\n","      <td>7.8292</td>\n","      <td>NaN</td>\n","      <td>Q</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>893</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>Wilkes, Mrs. James (Ellen Needs)</td>\n","      <td>female</td>\n","      <td>47.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>363272</td>\n","      <td>7.0000</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>894</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>Myles, Mr. Thomas Francis</td>\n","      <td>male</td>\n","      <td>62.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>240276</td>\n","      <td>9.6875</td>\n","      <td>NaN</td>\n","      <td>Q</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>895</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Wirz, Mr. Albert</td>\n","      <td>male</td>\n","      <td>27.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>315154</td>\n","      <td>8.6625</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>896</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>Hirvonen, Mrs. Alexander (Helga E Lindqvist)</td>\n","      <td>female</td>\n","      <td>22.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3101298</td>\n","      <td>12.2875</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>413</th>\n","      <td>1305</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Spector, Mr. Woolf</td>\n","      <td>male</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>A.5. 3236</td>\n","      <td>8.0500</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>414</th>\n","      <td>1306</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Oliva y Ocana, Dona. Fermina</td>\n","      <td>female</td>\n","      <td>39.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>PC 17758</td>\n","      <td>108.9000</td>\n","      <td>C105</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>415</th>\n","      <td>1307</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Saether, Mr. Simon Sivertsen</td>\n","      <td>male</td>\n","      <td>38.5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>SOTON/O.Q. 3101262</td>\n","      <td>7.2500</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>416</th>\n","      <td>1308</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Ware, Mr. Frederick</td>\n","      <td>male</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>359309</td>\n","      <td>8.0500</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>417</th>\n","      <td>1309</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Peter, Master. Michael J</td>\n","      <td>male</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2668</td>\n","      <td>22.3583</td>\n","      <td>NaN</td>\n","      <td>C</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>418 rows Ã— 12 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d3b61991-6c74-4111-bc16-95abc152b84c')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-d3b61991-6c74-4111-bc16-95abc152b84c button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-d3b61991-6c74-4111-bc16-95abc152b84c');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["df.head(11)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":394},"id":"Tgg3j3_PldjJ","executionInfo":{"status":"ok","timestamp":1662092418355,"user_tz":-330,"elapsed":440,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"c9ea9e83-3d16-4c65-8ff8-1e121af77e1a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    PassengerId  Survived  Pclass  \\\n","0           892         0       3   \n","1           893         1       3   \n","2           894         0       2   \n","3           895         0       3   \n","4           896         1       3   \n","5           897         0       3   \n","6           898         1       3   \n","7           899         0       2   \n","8           900         1       3   \n","9           901         0       3   \n","10          902         0       3   \n","\n","                                            Name     Sex   Age  SibSp  Parch  \\\n","0                               Kelly, Mr. James    male  34.5      0      0   \n","1               Wilkes, Mrs. James (Ellen Needs)  female  47.0      1      0   \n","2                      Myles, Mr. Thomas Francis    male  62.0      0      0   \n","3                               Wirz, Mr. Albert    male  27.0      0      0   \n","4   Hirvonen, Mrs. Alexander (Helga E Lindqvist)  female  22.0      1      1   \n","5                     Svensson, Mr. Johan Cervin    male  14.0      0      0   \n","6                           Connolly, Miss. Kate  female  30.0      0      0   \n","7                   Caldwell, Mr. Albert Francis    male  26.0      1      1   \n","8      Abrahim, Mrs. Joseph (Sophie Halaut Easu)  female  18.0      0      0   \n","9                        Davies, Mr. John Samuel    male  21.0      2      0   \n","10                              Ilieff, Mr. Ylio    male   NaN      0      0   \n","\n","       Ticket     Fare Cabin Embarked  \n","0      330911   7.8292   NaN        Q  \n","1      363272   7.0000   NaN        S  \n","2      240276   9.6875   NaN        Q  \n","3      315154   8.6625   NaN        S  \n","4     3101298  12.2875   NaN        S  \n","5        7538   9.2250   NaN        S  \n","6      330972   7.6292   NaN        Q  \n","7      248738  29.0000   NaN        S  \n","8        2657   7.2292   NaN        C  \n","9   A/4 48871  24.1500   NaN        S  \n","10     349220   7.8958   NaN        S  "],"text/html":["\n","  <div id=\"df-14b55ada-c1b6-48a4-a3bf-2cc2018fbedb\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Name</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Ticket</th>\n","      <th>Fare</th>\n","      <th>Cabin</th>\n","      <th>Embarked</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>892</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Kelly, Mr. James</td>\n","      <td>male</td>\n","      <td>34.5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>330911</td>\n","      <td>7.8292</td>\n","      <td>NaN</td>\n","      <td>Q</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>893</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>Wilkes, Mrs. James (Ellen Needs)</td>\n","      <td>female</td>\n","      <td>47.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>363272</td>\n","      <td>7.0000</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>894</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>Myles, Mr. Thomas Francis</td>\n","      <td>male</td>\n","      <td>62.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>240276</td>\n","      <td>9.6875</td>\n","      <td>NaN</td>\n","      <td>Q</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>895</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Wirz, Mr. Albert</td>\n","      <td>male</td>\n","      <td>27.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>315154</td>\n","      <td>8.6625</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>896</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>Hirvonen, Mrs. Alexander (Helga E Lindqvist)</td>\n","      <td>female</td>\n","      <td>22.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3101298</td>\n","      <td>12.2875</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>897</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Svensson, Mr. Johan Cervin</td>\n","      <td>male</td>\n","      <td>14.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7538</td>\n","      <td>9.2250</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>898</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>Connolly, Miss. Kate</td>\n","      <td>female</td>\n","      <td>30.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>330972</td>\n","      <td>7.6292</td>\n","      <td>NaN</td>\n","      <td>Q</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>899</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>Caldwell, Mr. Albert Francis</td>\n","      <td>male</td>\n","      <td>26.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>248738</td>\n","      <td>29.0000</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>900</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>Abrahim, Mrs. Joseph (Sophie Halaut Easu)</td>\n","      <td>female</td>\n","      <td>18.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2657</td>\n","      <td>7.2292</td>\n","      <td>NaN</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>901</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Davies, Mr. John Samuel</td>\n","      <td>male</td>\n","      <td>21.0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>A/4 48871</td>\n","      <td>24.1500</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>902</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Ilieff, Mr. Ylio</td>\n","      <td>male</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>349220</td>\n","      <td>7.8958</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-14b55ada-c1b6-48a4-a3bf-2cc2018fbedb')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-14b55ada-c1b6-48a4-a3bf-2cc2018fbedb button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-14b55ada-c1b6-48a4-a3bf-2cc2018fbedb');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4nFs14RTnS3k","executionInfo":{"status":"ok","timestamp":1662092427557,"user_tz":-330,"elapsed":770,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"704b3cb7-7869-482f-aac1-f13dad1c6552"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(418, 12)"]},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["df.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jtH7XqYjna5J","executionInfo":{"status":"ok","timestamp":1662092428922,"user_tz":-330,"elapsed":739,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"78aae6c4-4bd7-4be4-941d-432bab7261d0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['PassengerId', 'Survived', 'Pclass', 'Name', 'Sex', 'Age', 'SibSp',\n","       'Parch', 'Ticket', 'Fare', 'Cabin', 'Embarked'],\n","      dtype='object')"]},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ev88vP3TnmDe","executionInfo":{"status":"ok","timestamp":1662092430637,"user_tz":-330,"elapsed":6,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"1c76f69a-c27c-4d37-b824-6a9c2fb31f96"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 418 entries, 0 to 417\n","Data columns (total 12 columns):\n"," #   Column       Non-Null Count  Dtype  \n","---  ------       --------------  -----  \n"," 0   PassengerId  418 non-null    int64  \n"," 1   Survived     418 non-null    int64  \n"," 2   Pclass       418 non-null    int64  \n"," 3   Name         418 non-null    object \n"," 4   Sex          418 non-null    object \n"," 5   Age          332 non-null    float64\n"," 6   SibSp        418 non-null    int64  \n"," 7   Parch        418 non-null    int64  \n"," 8   Ticket       418 non-null    object \n"," 9   Fare         417 non-null    float64\n"," 10  Cabin        91 non-null     object \n"," 11  Embarked     418 non-null    object \n","dtypes: float64(2), int64(5), object(5)\n","memory usage: 39.3+ KB\n"]}]},{"cell_type":"code","source":["df.describe()"],"metadata":{"id":"mxvG2IFboB1c","executionInfo":{"status":"ok","timestamp":1662092434653,"user_tz":-330,"elapsed":952,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"ecb8feaf-25bd-45e1-82b4-e623e271fb5b","colab":{"base_uri":"https://localhost:8080/","height":300}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       PassengerId    Survived      Pclass         Age       SibSp  \\\n","count   418.000000  418.000000  418.000000  332.000000  418.000000   \n","mean   1100.500000    0.363636    2.265550   30.272590    0.447368   \n","std     120.810458    0.481622    0.841838   14.181209    0.896760   \n","min     892.000000    0.000000    1.000000    0.170000    0.000000   \n","25%     996.250000    0.000000    1.000000   21.000000    0.000000   \n","50%    1100.500000    0.000000    3.000000   27.000000    0.000000   \n","75%    1204.750000    1.000000    3.000000   39.000000    1.000000   \n","max    1309.000000    1.000000    3.000000   76.000000    8.000000   \n","\n","            Parch        Fare  \n","count  418.000000  417.000000  \n","mean     0.392344   35.627188  \n","std      0.981429   55.907576  \n","min      0.000000    0.000000  \n","25%      0.000000    7.895800  \n","50%      0.000000   14.454200  \n","75%      0.000000   31.500000  \n","max      9.000000  512.329200  "],"text/html":["\n","  <div id=\"df-48d4bd44-b802-4f71-a4c2-661617dfe549\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Fare</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>418.000000</td>\n","      <td>418.000000</td>\n","      <td>418.000000</td>\n","      <td>332.000000</td>\n","      <td>418.000000</td>\n","      <td>418.000000</td>\n","      <td>417.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>1100.500000</td>\n","      <td>0.363636</td>\n","      <td>2.265550</td>\n","      <td>30.272590</td>\n","      <td>0.447368</td>\n","      <td>0.392344</td>\n","      <td>35.627188</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>120.810458</td>\n","      <td>0.481622</td>\n","      <td>0.841838</td>\n","      <td>14.181209</td>\n","      <td>0.896760</td>\n","      <td>0.981429</td>\n","      <td>55.907576</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>892.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>0.170000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>996.250000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>21.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>7.895800</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>1100.500000</td>\n","      <td>0.000000</td>\n","      <td>3.000000</td>\n","      <td>27.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>14.454200</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>1204.750000</td>\n","      <td>1.000000</td>\n","      <td>3.000000</td>\n","      <td>39.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>31.500000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>1309.000000</td>\n","      <td>1.000000</td>\n","      <td>3.000000</td>\n","      <td>76.000000</td>\n","      <td>8.000000</td>\n","      <td>9.000000</td>\n","      <td>512.329200</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-48d4bd44-b802-4f71-a4c2-661617dfe549')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-48d4bd44-b802-4f71-a4c2-661617dfe549 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-48d4bd44-b802-4f71-a4c2-661617dfe549');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["df.isnull().sum()"],"metadata":{"id":"Evxvyh9SoHbS","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1662092437391,"user_tz":-330,"elapsed":443,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"5ace4fff-b7c1-4251-ed3a-5b6112cd5c32"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["PassengerId      0\n","Survived         0\n","Pclass           0\n","Name             0\n","Sex              0\n","Age             86\n","SibSp            0\n","Parch            0\n","Ticket           0\n","Fare             1\n","Cabin          327\n","Embarked         0\n","dtype: int64"]},"metadata":{},"execution_count":26}]},{"cell_type":"code","source":["df['Age'].fillna(df['Age'].std, inplace=True)\n","df['Cabin'].fillna(df['Cabin'].std,inplace=True)\n","df.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wASOs27tsdjA","executionInfo":{"status":"ok","timestamp":1662092439236,"user_tz":-330,"elapsed":661,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"65139ff8-1a26-495e-8e30-da226a4d7242"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["PassengerId    0\n","Survived       0\n","Pclass         0\n","Name           0\n","Sex            0\n","Age            0\n","SibSp          0\n","Parch          0\n","Ticket         0\n","Fare           1\n","Cabin          0\n","Embarked       0\n","dtype: int64"]},"metadata":{},"execution_count":27}]},{"cell_type":"code","source":["df.corr()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":237},"id":"Xq2W-rCYt8y0","executionInfo":{"status":"ok","timestamp":1662092459099,"user_tz":-330,"elapsed":736,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"e8108a20-ba5c-4ff9-81df-95cb0ea125ff"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["             PassengerId  Survived    Pclass     SibSp     Parch      Fare\n","PassengerId     1.000000 -0.023245 -0.026751  0.003818  0.043080  0.008211\n","Survived       -0.023245  1.000000 -0.108615  0.099943  0.159120  0.191514\n","Pclass         -0.026751 -0.108615  1.000000  0.001087  0.018721 -0.577147\n","SibSp           0.003818  0.099943  0.001087  1.000000  0.306895  0.171539\n","Parch           0.043080  0.159120  0.018721  0.306895  1.000000  0.230046\n","Fare            0.008211  0.191514 -0.577147  0.171539  0.230046  1.000000"],"text/html":["\n","  <div id=\"df-6728c9bf-8820-48eb-b980-49a7cd96bb66\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Fare</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>PassengerId</th>\n","      <td>1.000000</td>\n","      <td>-0.023245</td>\n","      <td>-0.026751</td>\n","      <td>0.003818</td>\n","      <td>0.043080</td>\n","      <td>0.008211</td>\n","    </tr>\n","    <tr>\n","      <th>Survived</th>\n","      <td>-0.023245</td>\n","      <td>1.000000</td>\n","      <td>-0.108615</td>\n","      <td>0.099943</td>\n","      <td>0.159120</td>\n","      <td>0.191514</td>\n","    </tr>\n","    <tr>\n","      <th>Pclass</th>\n","      <td>-0.026751</td>\n","      <td>-0.108615</td>\n","      <td>1.000000</td>\n","      <td>0.001087</td>\n","      <td>0.018721</td>\n","      <td>-0.577147</td>\n","    </tr>\n","    <tr>\n","      <th>SibSp</th>\n","      <td>0.003818</td>\n","      <td>0.099943</td>\n","      <td>0.001087</td>\n","      <td>1.000000</td>\n","      <td>0.306895</td>\n","      <td>0.171539</td>\n","    </tr>\n","    <tr>\n","      <th>Parch</th>\n","      <td>0.043080</td>\n","      <td>0.159120</td>\n","      <td>0.018721</td>\n","      <td>0.306895</td>\n","      <td>1.000000</td>\n","      <td>0.230046</td>\n","    </tr>\n","    <tr>\n","      <th>Fare</th>\n","      <td>0.008211</td>\n","      <td>0.191514</td>\n","      <td>-0.577147</td>\n","      <td>0.171539</td>\n","      <td>0.230046</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6728c9bf-8820-48eb-b980-49a7cd96bb66')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-6728c9bf-8820-48eb-b980-49a7cd96bb66 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-6728c9bf-8820-48eb-b980-49a7cd96bb66');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":28}]},{"cell_type":"code","source":["plt.figure(figsize=(7,4))\n","sns.heatmap(df.corr())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":337},"id":"ey90fBehwuG8","executionInfo":{"status":"ok","timestamp":1662092462887,"user_tz":-330,"elapsed":477,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"012db71b-af95-4ccb-da86-817c7e695b33"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f10ed64f510>"]},"metadata":{},"execution_count":29},{"output_type":"display_data","data":{"text/plain":["<Figure size 504x288 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["df.Embarked.unique()"],"metadata":{"id":"cCGS-IaNx4IL","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1662092464944,"user_tz":-330,"elapsed":7,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"e9d5282b-43e9-4ab3-8e6f-ba85cff8394f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['Q', 'S', 'C'], dtype=object)"]},"metadata":{},"execution_count":30}]},{"cell_type":"code","source":["df.Embarked.value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iENHRnPFcyAY","executionInfo":{"status":"ok","timestamp":1662092466790,"user_tz":-330,"elapsed":3,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"1966a023-83c0-4883-94ee-a66df8cd329d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["S    270\n","C    102\n","Q     46\n","Name: Embarked, dtype: int64"]},"metadata":{},"execution_count":31}]},{"cell_type":"code","source":["plt.figure(figsize=(7,6))\n","sns.countplot('Embarked',data=df)\n","plt.xticks(rotation=45)\n","plt.yticks(rotation=45)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":391},"id":"FtzWtn0-dOwM","executionInfo":{"status":"ok","timestamp":1662092749345,"user_tz":-330,"elapsed":447,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"96291e92-a32e-4a8a-cbb5-2fad7d528623"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 504x432 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":[],"metadata":{"id":"shwmSOo8dOsR"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"zgGXAm7vdOqN"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"kg6h09CZdOmW"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"CiqzUrnMdOkN"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"dUaH0SZ2dOgv"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"4zZK-ZYgdOeB"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"YEBxKhEFdOaP"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"CCvp_tGsdOYG"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"j21gAxBKdOUu"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"9tuJ64XGdOSu"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"qEYyML0FdOPW"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"N4c6WGs4dONV"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"Jg82IlP5dOJm"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"ANXABoWRdOHo"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"8rM-TXDxdOEi"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"-Ji6PsgedOCQ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"SibAUiDNdN9r"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"NC1u3YFSdN0K"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"rrELC6CjdNeY"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(\"sanjay kushwah\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Yp_n8DjWaDG2","executionInfo":{"status":"ok","timestamp":1657797128031,"user_tz":-330,"elapsed":15,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"4baf02af-759c-45b2-c9ae-c5de35a33370"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["sanjay kushwah\n"]}]},{"cell_type":"code","source":["A,b=20,30\n","print(\"sum=\",A+b)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DW2G6lIft4R4","executionInfo":{"status":"ok","timestamp":1660100890596,"user_tz":-330,"elapsed":745,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"86c08f93-ed4a-427d-8079-74a985a2a1e9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["sum= 50\n"]}]},{"cell_type":"code","source":["name=\"sachin kush\"\n","branch=\"computer science\"\n","age=\"25\"\n","print(\"my name is:\",name)\n","print(\"my age is:\",age)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"InzVdWtuaLkY","executionInfo":{"status":"ok","timestamp":1659172245093,"user_tz":-330,"elapsed":14,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"cfc85273-b709-4643-8239-1c8e8e7f0c12"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["my name is: sachin kush\n","my age is: 25\n"]}]},{"cell_type":"code","source":["list1=[1,2,3,4,5]\n","for i in list1:\n","  print(i)\n","  if i==4:\n","    break\n","print(\"end of for loop\")    "],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PLgI6fxJamt2","executionInfo":{"status":"ok","timestamp":1657797565935,"user_tz":-330,"elapsed":425,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"989ffd48-fed1-4a2c-98e8-51c4300ca997"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1\n","2\n","3\n","4\n","end of for loop\n"]}]},{"cell_type":"code","source":["number=10\n","print(number)\n","\n","_a=100\n","print(_a)\n","\n","x_y=1000\n","print(x_y)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"g-49WOklb4vy","executionInfo":{"status":"ok","timestamp":1657798012046,"user_tz":-330,"elapsed":609,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"e0b244e4-3ab0-4322-ee9a-230dff95d29f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["10\n","100\n","1000\n"]}]},{"cell_type":"code","source":["type(name)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2Knvqq7gdpuq","executionInfo":{"status":"ok","timestamp":1657798194475,"user_tz":-330,"elapsed":472,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"d93ce304-c4a3-4c4d-f75f-a65edccf089d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["str"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["# identy of variables (address of variables)\n","a=50\n","b=a\n","print(id(a))\n","print(id(b))\n","\n","a=500\n","print(id(a))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NQJpN1a-eRRf","executionInfo":{"status":"ok","timestamp":1657798368620,"user_tz":-330,"elapsed":454,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"bd4507fc-2e3d-4e58-ca34-f8cc4c06287c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["11257632\n","11257632\n","139922302010640\n"]}]},{"cell_type":"code","source":["name=\"devansh\"\n","age=20\n","marks=80.50\n","\n","print(name,age,marks)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oCnzjOYufr8S","executionInfo":{"status":"ok","timestamp":1657798626745,"user_tz":-330,"elapsed":527,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"5df7c13e-8288-4c87-cecd-2bcb5108c00f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["devansh 20 80.5\n"]}]},{"cell_type":"code","source":["x=y=z=50\n","print(x,y,z)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"S_Cbxcocf77j","executionInfo":{"status":"ok","timestamp":1657798791483,"user_tz":-330,"elapsed":581,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"62ac7cd5-007d-4048-a269-ee461a31fb8c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["50 50 50\n"]}]},{"cell_type":"code","source":["a,b,c=5,4,3\n","print(a,b,c)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jkaS_Firgizf","executionInfo":{"status":"ok","timestamp":1657798906486,"user_tz":-330,"elapsed":7,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"6bad13d3-e955-482a-d90f-36bf2dc0b19e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["5 4 3\n"]}]},{"cell_type":"code","source":["# local variables\n","def add():\n","  a=20\n","  b=30\n","  c=a+b\n","  print(\"the sum is:\",c)\n","\n","add()  "],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_GNaEa4Sg-OO","executionInfo":{"status":"ok","timestamp":1657799157823,"user_tz":-330,"elapsed":460,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"a72e8d1c-ec7e-420c-9d7f-4132c51f7173"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["the sum is: 50\n"]}]},{"cell_type":"code","source":["#global variable\n","x=101\n","\n","def mainfunction():\n","  global x\n","  print(x)\n","\n","  x=\"welcome to my home\"\n","  print(x)\n","\n","mainfunction() \n","\n","print(x)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TAePFEJJiB9j","executionInfo":{"status":"ok","timestamp":1657799676399,"user_tz":-330,"elapsed":15,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"352a816b-0994-4d7a-8c3f-894fad63ea93"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["101\n","welcome to my home\n","welcome to my home\n"]}]},{"cell_type":"code","source":["x=101\n","\n","def mainfunction():\n","  \n","  print(x)\n","\n","mainfunction() "],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TJ24bxohle1S","executionInfo":{"status":"ok","timestamp":1657800441680,"user_tz":-330,"elapsed":876,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"78975ec7-0e38-449c-d8b9-9dbce75bc989"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["101\n"]}]},{"cell_type":"code","source":["x=6\n","print(x)\n","del x\n","print(x)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":223},"id":"iUpyYTYLncuT","executionInfo":{"status":"error","timestamp":1657800660932,"user_tz":-330,"elapsed":629,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"e9533d34-30b2-487f-a50f-052c1c20cc6f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["6\n"]},{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-14-cbd56f51084d>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;32mdel\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'x' is not defined"]}]},{"cell_type":"code","source":["a=10000000000000000000000000000000000000\n","a=a+1\n","print(type(a))\n","print(a)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mEw8kiFFnrJL","executionInfo":{"status":"ok","timestamp":1657800794266,"user_tz":-330,"elapsed":748,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"388b9092-249b-4190-a2b5-c6ba3c71d9ca"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'int'>\n","10000000000000000000000000000000000001\n"]}]},{"cell_type":"code","source":["a=5\n","print(a)\n","print((a))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hq3zFNpNoEzZ","executionInfo":{"status":"ok","timestamp":1657800859977,"user_tz":-330,"elapsed":515,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"47a773f3-b325-44d4-f1e7-af89a3417ff0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["5\n","5\n"]}]},{"cell_type":"code","source":["a=5\n","b=6\n","print(a,b)\n","\n","print(1,2,3,4,5,6,7,8)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dKsR963koceh","executionInfo":{"status":"ok","timestamp":1657800934885,"user_tz":-330,"elapsed":837,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"dd061eac-ec85-423c-cad5-ca3fd07ad7bd"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["5 6\n","1 2 3 4 5 6 7 8\n"]}]},{"cell_type":"code","source":["a=10\n","b=40.30\n","c=\"hi sanjay\"\n","print(type(a))\n","print(type(b))\n","print(type(c))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"49Vt3_HjpM2f","executionInfo":{"status":"ok","timestamp":1657801123358,"user_tz":-330,"elapsed":12,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"4aa9185c-c55f-4735-eb32-dabfbbfe96d6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'int'>\n","<class 'float'>\n","<class 'str'>\n"]}]},{"cell_type":"code","source":["a=5\n","print(\"the type of a\",type(a))\n","\n","b=40.5\n","print(\"the type of b\",type(b))\n","\n","c=1+3j\n","print(\"the type of c\",type(c))\n","print(\"c is a complex number\",isinstance(1+3j,complex))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VZHFJAbypbuG","executionInfo":{"status":"ok","timestamp":1657802136386,"user_tz":-330,"elapsed":618,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"dd841cfa-f389-4af5-f3ed-e483b2456259"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["the type of a <class 'int'>\n","the type of b <class 'float'>\n","the type of c <class 'complex'>\n","c is a complex number True\n"]}]},{"cell_type":"code","source":["a=10\n","b=0\n","print(\"a is dividing by zero\")\n","assert b!=0\n","print(a/b)"],"metadata":{"id":"zPKVt6i8ta0H","colab":{"base_uri":"https://localhost:8080/","height":236},"executionInfo":{"status":"error","timestamp":1657883264179,"user_tz":-330,"elapsed":24,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"e52d6ee1-52fd-41fa-d2ae-253716c45253"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["a is dividing by zero\n"]},{"output_type":"error","ename":"AssertionError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mAssertionError\u001b[0m                            Traceback (most recent call last)","\u001b[0;32m<ipython-input-1-e3874743a277>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0mb\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"a is dividing by zero\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m \u001b[0;32massert\u001b[0m \u001b[0mb\u001b[0m\u001b[0;34m!=\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      5\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0ma\u001b[0m\u001b[0;34m/\u001b[0m\u001b[0mb\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mAssertionError\u001b[0m: "]}]},{"cell_type":"code","source":["def my_func(a,b):\n","  c=a+b\n","  print(c)\n","\n","my_func(10,20)  "],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PodwBG_Hiuy1","executionInfo":{"status":"ok","timestamp":1657883327818,"user_tz":-330,"elapsed":428,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"41e1c4d4-b70a-4105-e2d8-982fd4109de3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["30\n"]}]},{"cell_type":"code","source":["a=0\n","while a<4:\n","  a+=1\n","  if a==2:\n","    continue\n","  print(a)  \n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"s04yHklLjD16","executionInfo":{"status":"ok","timestamp":1657883518842,"user_tz":-330,"elapsed":11,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"a138df49-1171-4aa8-ff8d-c544b3c33101"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1\n","3\n","4\n"]}]},{"cell_type":"code","source":["for i in range(5):\n","  if(i==3):\n","    break\n","  print(i)  \n","print(\"End of execution\")  "],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pcEtN5F5jwh_","executionInfo":{"status":"ok","timestamp":1657883621711,"user_tz":-330,"elapsed":724,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"3329534d-7339-43f6-a63e-e3561e0f8202"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0\n","1\n","2\n","End of execution\n"]}]},{"cell_type":"code","source":["i=18\n","if (1<12):\n","    print(\"i am less than 18\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rLNk9vcLkXxQ","executionInfo":{"status":"ok","timestamp":1657883898808,"user_tz":-330,"elapsed":807,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"07c69be5-84a2-46d1-bf6e-1bcff939a40b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["i am less than 18\n"]}]},{"cell_type":"code","source":["n=11\n","if n%2==0:\n","  print(\"even\")\n","else:\n","  print(\"odd\")  "],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HT9gSRb8l-SJ","executionInfo":{"status":"ok","timestamp":1657884173453,"user_tz":-330,"elapsed":468,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"cedefbd8-ca9e-4b59-a4ca-81fc8aa9929f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["odd\n"]}]},{"cell_type":"code","source":["marks = int(input(\"enter the marks\"))\n","if marks>=90:\n","  print(\"excellent\")\n","elif (marks<90) and (marks>=75):\n","  print(\"very good\")\n","elif (marks<75) and (marks>=60):\n","  print(\"good\")\n","else:\n","  print(\"average\")    "],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UVRx9gBcmP2G","executionInfo":{"status":"ok","timestamp":1657884434623,"user_tz":-330,"elapsed":5672,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"81b0a2bd-85bf-4123-d9dc-478e6d9d0a19"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["enter the marks90\n","excellent\n"]}]},{"cell_type":"code","source":["a=10\n","b=12\n","del a\n","print(b)\n","# a is no longer exist\n","print(a)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":219},"id":"OlkeOfKLnRs9","executionInfo":{"status":"error","timestamp":1657884774381,"user_tz":-330,"elapsed":559,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"9ea64f98-616a-41ee-c4ca-808f16e0e161"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["12\n"]},{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-13-d07804ef1f32>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mb\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;31m# a is no longer exist\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 6\u001b[0;31m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0ma\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'a' is not defined"]}]},{"cell_type":"code","source":["a=0\n","try:\n","  b=1/a\n","except Exception as e:\n","  print(e)  "],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AKhfd2zIonsP","executionInfo":{"status":"ok","timestamp":1657884906493,"user_tz":-330,"elapsed":455,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"f6260de9-9880-4b98-8b3d-56b7a00d9219"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["division by zero\n"]}]},{"cell_type":"code","source":["a=5\n","if (a>2):\n","  raise Exception(\"a should not exceed 2\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":201},"id":"JvNV_yBnpZTh","executionInfo":{"status":"error","timestamp":1657885261371,"user_tz":-330,"elapsed":553,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"3eae6523-b2a4-4c68-9a9d-5dff1d1b2310"},"execution_count":null,"outputs":[{"output_type":"error","ename":"Exception","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mException\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-17-054fae34da8f>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0ma\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m5\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;32mif\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0ma\u001b[0m\u001b[0;34m>\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m   \u001b[0;32mraise\u001b[0m \u001b[0mException\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"a should not exceed 2\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mException\u001b[0m: a should not exceed 2"]}]},{"cell_type":"code","source":["a=0\n","b=5\n","try:\n","  c=b/a\n","  print(c)\n","except Exception as e:\n","  print(e)\n","finally:\n","  print(\"sanjay\")    "],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"quuHHAb8qIZW","executionInfo":{"status":"ok","timestamp":1657885955401,"user_tz":-330,"elapsed":11,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"eb92b87f-45bb-4c18-99d3-a647b66ad72b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["division by zero\n","sanjay\n"]}]},{"cell_type":"code","source":["a=0\n","b=5\n","try:\n","  c=b/a\n","  print(c)\n","except:\n","  print(a+b)\n","finally:\n","  print(\"sanjay\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GfS41hyStCIF","executionInfo":{"status":"ok","timestamp":1657886159526,"user_tz":-330,"elapsed":11,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"60414cbb-e695-4c8d-ad46-099f7b5ab447"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["5\n","sanjay\n"]}]},{"cell_type":"code","source":["list=[1,2,3,4,5]\n","for i in list:\n","  print(i)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"93fF7ZvwupO-","executionInfo":{"status":"ok","timestamp":1657886422131,"user_tz":-330,"elapsed":10,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"0109bc5e-a1cc-4ac4-b3bb-2b66e4a801c1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1\n","2\n","3\n","4\n","5\n"]}]},{"cell_type":"code","source":["a=0\n","while (a<5):\n","  print(a)\n","  a=a+1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2T4-k-BFu0wg","executionInfo":{"status":"ok","timestamp":1657886557388,"user_tz":-330,"elapsed":569,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"3b7aa761-df38-47b6-f4d0-27ed46beac2e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0\n","1\n","2\n","3\n","4\n"]}]},{"cell_type":"code","source":["import math\n","print(math.sqrt(25))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"S_uyEsEuvVsZ","executionInfo":{"status":"ok","timestamp":1657886822070,"user_tz":-330,"elapsed":450,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"ecc1b6d8-2a3a-49be-eb88-ffa4b63bb1df"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["5.0\n"]}]},{"cell_type":"code","source":["from math import sqrt\n","print(sqrt(25))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3JaY4kLxwZ3-","executionInfo":{"status":"ok","timestamp":1657886978028,"user_tz":-330,"elapsed":696,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"7703b404-728a-4285-d883-34414ef49253"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["5.0\n"]}]},{"cell_type":"code","source":["import calendar as cal\n","print(cal.month_name[12])\n","print(cal.month_name[3])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"keKSTXBww8wj","executionInfo":{"status":"ok","timestamp":1657887131999,"user_tz":-330,"elapsed":486,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"0db239ac-c581-4d73-a41a-5f465ad9cd7b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["December\n","March\n"]}]},{"cell_type":"code","source":["class my_class:\n","  pass\n","\n","def my_func():\n","  pass  \n","\n"],"metadata":{"id":"5SShtO7RxoJN"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def sum(a,b):\n","  c=a+b\n","  return c\n","\n","print(\"the sum is: = \",sum(34,20))  "],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wipT6R8sx_mz","executionInfo":{"status":"ok","timestamp":1657887328433,"user_tz":-330,"elapsed":480,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"2d624c62-a881-4f2b-8d11-840e9844e656"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["the sum is: =  54\n"]}]},{"cell_type":"code","source":["def return_none():\n","  a=10\n","  b=20\n","  c=a+b\n","  return c\n","  x=return_none()\n","  print(x)"],"metadata":{"id":"kk6E3HfdySXv"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["list=[1,1,2,3,3,3]\n","print(list)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Yxzh2sSJy8ay","executionInfo":{"status":"ok","timestamp":1658140280062,"user_tz":-330,"elapsed":567,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"4bd99b67-9459-4e4f-9acf-2846620f3861"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[1, 1, 2, 3, 3, 3]\n"]}]},{"cell_type":"code","source":["set={1,2,3,\"sanjay\"}\n","print(set)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Q7oFV94x3QJx","executionInfo":{"status":"ok","timestamp":1658140364577,"user_tz":-330,"elapsed":16,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"aab2b1b1-32ad-444f-8b16-f5f6a38df136"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{'sanjay', 1, 2, 3}\n"]}]},{"cell_type":"code","source":["def my_func():\n","  global a\n","  a=10\n","  b=20\n","  c=a+b\n","  print(c)\n","\n","my_func()\n"],"metadata":{"id":"4gzA2hWu-fb6"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["x=5\n","y=5\n","\n","a=[]\n","b=[]\n","\n","print(x is y)\n","print(a is b)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-EwvQKw9-pO4","executionInfo":{"status":"ok","timestamp":1658142289692,"user_tz":-330,"elapsed":630,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"7ac35b7b-d0fb-40cf-f4f3-47b4b6f513b3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["True\n","False\n"]}]},{"cell_type":"code","source":["# list expression from hackerrank\n","x = int(input())\n","y = int(input())\n","z = int(input())\n","n = int(input())\n","    \n","output = [[X,Y,Z] for X in range(x+1) for Y in range(y+1) for Z in range(z+1) if X+Y+Z != n]\n","print (output)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"o-6m9iSM-3rV","executionInfo":{"status":"ok","timestamp":1658144155442,"user_tz":-330,"elapsed":13890,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"03b748ea-6bdf-44a9-d5f6-89faed71e1d8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["2\n","2\n","2\n","2\n","[[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 2], [0, 2, 1], [0, 2, 2], [1, 0, 0], [1, 0, 2], [1, 1, 1], [1, 1, 2], [1, 2, 0], [1, 2, 1], [1, 2, 2], [2, 0, 1], [2, 0, 2], [2, 1, 0], [2, 1, 1], [2, 1, 2], [2, 2, 0], [2, 2, 1], [2, 2, 2]]\n"]}]},{"cell_type":"code","source":[],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":271},"id":"clYP__93MzdP","executionInfo":{"status":"error","timestamp":1658146161706,"user_tz":-330,"elapsed":18440,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"43ec93dc-bbfe-49b5-cddc-d7b7b5420d39"},"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["5\n","2 3 4 6 6 5\n"]},{"output_type":"error","ename":"TypeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-11-5c03f7d7e575>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mn\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0minput\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0marr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmap\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mint\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minput\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msplit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0ms\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mset\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0marr\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      4\u001b[0m \u001b[0ml\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mlist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0ms\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mz\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0ml\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msort\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mTypeError\u001b[0m: 'set' object is not callable"]}]},{"cell_type":"code","source":["n = int(input())\n","arr = map(int, input().split())\n","print(sorted(list(set(arr))[-2]))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":235},"id":"57BmyIn-Rp8A","executionInfo":{"status":"error","timestamp":1658407096804,"user_tz":-330,"elapsed":14967,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"cd185fdf-5d33-45fc-d783-bdf8875192d2"},"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["2\n","sanjay 24 25 27\n"]},{"output_type":"error","ename":"ValueError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-51-8abac72836c5>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mn\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0minput\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0marr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmap\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mint\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minput\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msplit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msorted\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mset\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0marr\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m-\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mValueError\u001b[0m: invalid literal for int() with base 10: 'sanjay'"]}]},{"cell_type":"code","source":["def intro():\n","  \"\"\"\n","      this is comment line\n","  \"\"\"\n","  print(\"sanjay\")\n","\n","intro.__doc__   "],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"2gN-EVLf5m9P","executionInfo":{"status":"ok","timestamp":1658225063546,"user_tz":-330,"elapsed":403,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"3e26553d-5647-4c70-93b1-06fcebcfdb4f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'\\n      this is comment line\\n  '"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["def intro():\n","  \"\"\"\n","      this is comment line\n","  \"\"\"\n","  print(\"sanjay\")\n","\n","intro() "],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jOLzLilS6hLe","executionInfo":{"status":"ok","timestamp":1658225084300,"user_tz":-330,"elapsed":604,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"682aa7d0-5ac8-4bda-c3ea-4dab3e6e79be"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["sanjay\n"]}]},{"cell_type":"code","source":["for i in range(0,5):\n","  print(i)\n","\n","else:\n","  print(\"sanjay\")  "],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ojPPPbHj_Ixy","executionInfo":{"status":"ok","timestamp":1658226306182,"user_tz":-330,"elapsed":620,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"d475c46f-7a3a-47e5-e3e2-0378a77ae7df"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0\n","1\n","2\n","3\n","4\n","sanjay\n"]}]},{"cell_type":"code","source":["for i in range(0,5):\n","  print(i)\n","  break\n","else:\n","  print(\"sanjay\")  "],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZsaNukbH_mk_","executionInfo":{"status":"ok","timestamp":1658226432035,"user_tz":-330,"elapsed":507,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"e41b874a-6ce7-4487-e58b-e8e39e42ed8c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0\n"]}]},{"cell_type":"code","source":["str = \"string using double quotes\"\n","print(str)\n","s = \"\"\" A multi line \n","string\"\"\"\n","\n","print(s)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FtoxPTAPISwj","executionInfo":{"status":"ok","timestamp":1658229135294,"user_tz":-330,"elapsed":537,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"0bd4f17a-ccff-4f77-b3db-318b7ba569b8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["string using double quotes\n"," A multi line \n","string\n"]}]},{"cell_type":"code","source":["str1 = \" Hello javapoint\" # string str\n","str2 = ' how are you' # strint str2\n","print(str1[0:2]) # printing first two character using slice operator\n","print(str1[4]) #printing 4th character of the string\n","print(str1*2) # printing the string twice\n","print(str1 + str2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6GjChVHbKKdU","executionInfo":{"status":"ok","timestamp":1658229576208,"user_tz":-330,"elapsed":9,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"688709d3-7ffd-4494-a808-2edebccbefe9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":[" H\n","l\n"," Hello javapoint Hello javapoint\n"," Hello javapoint how are you\n"]}]},{"cell_type":"code","source":["list1 = [1,\"hi\",\"python\",2]\n","#checking type of given list\n","\n","print(type(list1))\n","\n","#printing the list!\n","print(list1)\n","\n","print(list1[3:])\n","\n","print(list1[0:2])\n","\n","print(list1 + list1)\n","\n","print(list1 * 3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yeykI1SMLL7t","executionInfo":{"status":"ok","timestamp":1658230103493,"user_tz":-330,"elapsed":533,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"97b3abca-df5d-4875-eb40-20726f8179e7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'list'>\n","[1, 'hi', 'python', 2]\n","[2]\n","[1, 'hi']\n","[1, 'hi', 'python', 2, 1, 'hi', 'python', 2]\n","[1, 'hi', 'python', 2, 1, 'hi', 'python', 2, 1, 'hi', 'python', 2]\n"]}]},{"cell_type":"code","source":["#tuple\n","tup = (\"hi\",\"python\",2)\n","print(type(tup))\n","\n","print(tup)\n","\n","print(tup[1:])\n","\n","print(tup[0:1])\n","\n","print(tup + tup)\n","\n","print(tup*3)\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lDobTuUhNOs1","executionInfo":{"status":"ok","timestamp":1658230402174,"user_tz":-330,"elapsed":550,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"1108df3a-665a-4662-8abb-4688394a657e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'tuple'>\n","('hi', 'python', 2)\n","('python', 2)\n","('hi',)\n","('hi', 'python', 2, 'hi', 'python', 2)\n","('hi', 'python', 2, 'hi', 'python', 2, 'hi', 'python', 2)\n"]}]},{"cell_type":"code","source":["d = {1:\"jimmy\",2:\"Alex\",3:\"john\",4:\"mike\"}\n","\n","#printing dictionary\n","print(d)\n","\n","print(\"1st name is \"+d[1])\n","print(\"2nd name is \"+d[4])\n","print(d.keys())\n","print(d.values())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"M3w8R8HmN8FT","executionInfo":{"status":"ok","timestamp":1658230612914,"user_tz":-330,"elapsed":533,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"348d2923-96c1-4dc5-bf26-ac1da795d9bd"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{1: 'jimmy', 2: 'Alex', 3: 'john', 4: 'mike'}\n","1st name is jimmy\n","2nd name is mike\n","dict_keys([1, 2, 3, 4])\n","dict_values(['jimmy', 'Alex', 'john', 'mike'])\n"]}]},{"cell_type":"markdown","source":["**boolean**"],"metadata":{"id":"TF0Ig2hSQKt2"}},{"cell_type":"code","source":["print(type(False))\n","print(type(True))\n","print(False)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cGU-ILvTQQXC","executionInfo":{"status":"ok","timestamp":1658230989543,"user_tz":-330,"elapsed":10,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"544f1e52-1ac6-4ae8-d1cc-873c8f593e17"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'bool'>\n","<class 'bool'>\n","False\n"]}]},{"cell_type":"markdown","source":["#set"],"metadata":{"id":"ZfqXNowuR66V"}},{"cell_type":"code","source":["set1 = set()\n","\n","set2 = {\"james\",2,3,\"python\"}\n","\n","print(set2)\n","\n","set2.add(10)\n","print(set2)\n","\n","set2.remove(2)\n","print(set2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8eQ3jrcoRUDY","executionInfo":{"status":"ok","timestamp":1658231126246,"user_tz":-330,"elapsed":793,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"5046d55e-71d8-4a51-938c-28ee47bd8ef8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{'python', 2, 3, 'james'}\n","{2, 3, 10, 'python', 'james'}\n","{3, 10, 'python', 'james'}\n"]}]},{"cell_type":"code","source":["def outside_function():\n","  a=20\n","  def inside_function():\n","    nonlocal a\n","    a=30\n","    print(\"inner function:\",a)\n","  inside_function()\n","  print(\"outer function:\",a)\n","outside_function()    "],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"avcEJP0eSEKq","executionInfo":{"status":"ok","timestamp":1658231921584,"user_tz":-330,"elapsed":477,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"2173fc84-7eaf-4011-8baf-99e6344da7a5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["inner function: 30\n","outer function: 30\n"]}]},{"cell_type":"code","source":["a=lambda x:x**2\n","for i in range(1,6):\n","  print(a(i))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"L6duwzWBUa6q","executionInfo":{"status":"ok","timestamp":1658232032590,"user_tz":-330,"elapsed":437,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"576a81c3-cf0e-4bc0-8b87-739de03c504a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1\n","4\n","9\n","16\n","25\n"]}]},{"cell_type":"code","source":["def fun_Generator():\n","  yield 1\n","  yield 2\n","  yield 3\n","for value in fun_Generator():\n","  print(value)  "],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yvsZAjYxVZpc","executionInfo":{"status":"ok","timestamp":1658232488395,"user_tz":-330,"elapsed":480,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"f18a012f-af02-4ece-c097-546b3cdf8e28"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1\n","2\n","3\n"]}]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount(\"/content/drive\")"],"metadata":{"id":"qakHEYo0YVXx","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1658233073444,"user_tz":-330,"elapsed":27027,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"5bae706e-a304-4b5f-8d4f-e0dcbbe32126"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["with open('/content/drive/MyDrive/data.csv','w') as file:\n","  file.write(\"hello world!\")"],"metadata":{"id":"BSgvCU9WXKnq"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["text1 = 'hello\\\n","user'\n","print(text1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AfiEg8mSZY3J","executionInfo":{"status":"ok","timestamp":1658233185989,"user_tz":-330,"elapsed":13,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"0c8499d0-1a84-4f8c-9f11-d5c578f823b7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["hellouser\n"]}]},{"cell_type":"code","source":["x= 0b10100 #binary literals\n","\n","y=100 #decimal literals\n","\n","z=0O215 #ocral literals\n","\n","u=0x12d #hexadecimal literals\n","\n","# float literals\n","float_1 = 100.5\n","float_2 = 1.5e2\n","\n","#complex literal\n","a = 5+3.14j\n","\n","print(x,y,z,u)\n","print(float_1,float_2)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yAUkOnjaZs2x","executionInfo":{"status":"ok","timestamp":1658233833581,"user_tz":-330,"elapsed":416,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"962c92af-37d6-4499-d688-c8cc0447c956"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["20 100 141 301\n","100.5 150.0\n"]}]},{"cell_type":"code","source":["x = (1 == True)\n","y = (2 == False)\n","z = (3 == True)\n","a = True + 10\n","b = False + 10\n","\n","print(\"x is \",x)\n","print(\"y is \",y)\n","print(\"z is \",z)\n","print(\"a is \",a)\n","print(\"b is \",b)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RH4LmOacEW40","executionInfo":{"status":"ok","timestamp":1658311684300,"user_tz":-330,"elapsed":14,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"3cc71fad-3dbb-4cfd-bc21-eb87ccf613a9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["x is  True\n","y is  False\n","z is  False\n","a is  11\n","b is  10\n"]}]},{"cell_type":"code","source":["val1 = 10\n","val2 = None\n","print(val1)\n","print(val2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pWlFuTheFLfW","executionInfo":{"status":"ok","timestamp":1658311759284,"user_tz":-330,"elapsed":449,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"26dd480f-825d-4d05-b948-6b0e9407a45c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["10\n","None\n"]}]},{"cell_type":"code","source":["list = ['john',678,20.4,'peter']\n","list1 = [456,'andrew']\n","print(list)\n","print(list+list1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"w7qY2thmFrmY","executionInfo":{"status":"ok","timestamp":1658311950950,"user_tz":-330,"elapsed":16,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"3d2352ff-a7db-4dd0-d593-667796bd0f6e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['john', 678, 20.4, 'peter']\n","['john', 678, 20.4, 'peter', 456, 'andrew']\n"]}]},{"cell_type":"code","source":["dict = {'name':'peter','Age':18,'Roll_nu':101}\n","print(dict)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0s1fvfW1Ggne","executionInfo":{"status":"ok","timestamp":1658312139988,"user_tz":-330,"elapsed":20,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"3f79d8f7-fb3e-46e5-b994-793354bb112d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{'name': 'peter', 'Age': 18, 'Roll_nu': 101}\n"]}]},{"cell_type":"code","source":["tup = (10,20,\"Dev\",[2,3,4])\n","print(tup)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pLfForzSHNkH","executionInfo":{"status":"ok","timestamp":1658312385407,"user_tz":-330,"elapsed":715,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"cd76735b-9cd6-47e8-e953-b964512debb4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(10, 20, 'Dev', [2, 3, 4])\n"]}]},{"cell_type":"code","source":["set = {\"apple\",}"],"metadata":{"id":"kaUSLKq8HvBk"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["dn = int(input(\"enter the number:\"))\n","if (dn%2==0):\n","  print(\"even number\")\n","\n","else:\n","  print(\"odd number\")\n","\n","print(\"task complete\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Z84T1EaoH3iA","executionInfo":{"status":"ok","timestamp":1658312757479,"user_tz":-330,"elapsed":4964,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"85524fe9-894e-4719-a318-a12fdc0892c8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["enter the number:2\n","even number\n","taks complete\n"]}]},{"cell_type":"code","source":["a = int(input(\"Enter a?\"))\n","b = int(input(\"Enter b \"))\n","c = int(input(\"enter c \"))\n","\n","if a>b and a>c:\n","  print(\"a is largest\")\n","\n","if b>a and b>c:\n","  print(\"b is largest\")\n","\n","if c>a and c>b:\n","  print(\"c is largest\")    "],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xT8LlrI_JOHE","executionInfo":{"status":"ok","timestamp":1658313160767,"user_tz":-330,"elapsed":12307,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"89d41b5f-7808-4ed5-eb93-1a4ddb0e3bc4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Enter a?23\n","Enter b 43\n","enter c 66\n","c is largest\n"]}]},{"cell_type":"code","source":["Result = []\n","scorelist = []\n","if __name__ == '__main__':\n","    for _ in range(int(input())):\n","        name = input()\n","        score = float(input())\n","        Result+=[[name,score]]\n","        scorelist+=[score]\n","    b=sorted(list(set(scorelist)))[1] \n","    for a,c in sorted(Result):\n","        if c==b:\n","            print(a)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZuMX8RqhCiGT","executionInfo":{"status":"ok","timestamp":1658395050223,"user_tz":-330,"elapsed":88861,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"f7e28594-4881-4db6-d0de-a5f82d76d16b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["5\n","sanjay\n","34.5\n","satyam\n","45.3\n","subham\n","34.5\n","vishal\n","45.5\n","shailu\n","54.6\n","satyam\n"]}]},{"cell_type":"code","source":["n = int(input(\"enter the number\"))\n","for i in range(2,n,2):\n","  print(i)"],"metadata":{"id":"gGLfe5mzDoSA","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1658401733686,"user_tz":-330,"elapsed":17744,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"a83d9fb6-c1fe-42db-a2ea-65b4abd168ad"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["enter the number5\n","2\n","4\n"]}]},{"cell_type":"code","source":["n = int(input(\"enter the num.\"))\n","for i in range(1,n,2):\n","  print(i)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"eu8wyAF1ce_t","executionInfo":{"status":"ok","timestamp":1658401793393,"user_tz":-330,"elapsed":6454,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"b1629762-33cf-489a-fa3d-c97169dab61d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["enter the num.10\n","1\n","3\n","5\n","7\n","9\n"]}]},{"cell_type":"code","source":["list = ['sanjay','satyam','subham','vishal']\n","for i in range(len(list)):\n","  print(\"hello \",list[i])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OI49cnr2dAUm","executionInfo":{"status":"ok","timestamp":1658402065766,"user_tz":-330,"elapsed":435,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"003f90b8-465e-4031-c804-6fdcf3e4bf0c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["hello  sanjay\n","hello  satyam\n","hello  subham\n","hello  vishal\n"]}]},{"cell_type":"code","source":["rows = int(input(\"enter the num = \"))\n","for i in range(1,rows+1):\n","  for j in range(i):\n","    print(i,end=\" \")\n","  print()  "],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XfUPzWGfd44U","executionInfo":{"status":"ok","timestamp":1658402655523,"user_tz":-330,"elapsed":3530,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"94191fef-dbe4-4b33-daf6-5a9da8362f49"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["enter the num = 5\n","1 \n","2 2 \n","3 3 3 \n","4 4 4 4 \n","5 5 5 5 5 \n"]}]},{"cell_type":"code","source":["rows = int(input(\"enter the num = \"))\n","for i in range(rows,0,-1):\n","  for j in range(i):\n","    print(\"*\",end=\" \")\n","  print()  "],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wC5hhJrKgW-g","executionInfo":{"status":"ok","timestamp":1658402824169,"user_tz":-330,"elapsed":5983,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"90736df6-4766-4fad-d329-3f5b49ed1dcd"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["enter the num = 6\n","* * * * * * \n","* * * * * \n","* * * * \n","* * * \n","* * \n","* \n"]}]},{"cell_type":"code","source":["num = int(input(\"enter the num = \"))\n","for i in range(1,num+1):\n","  print(\"* \"*i)\n","  \n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MXBjJwt6g272","executionInfo":{"status":"ok","timestamp":1658403594873,"user_tz":-330,"elapsed":3742,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"e14d44c0-ff88-45f1-d1aa-a0aeb95405b4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["enter the num = 5\n","* \n","* * \n","* * * \n","* * * * \n","* * * * * \n"]}]},{"cell_type":"code","source":["for i in range(0,6):\n","  print(i)\n","else:\n","  print(\"sanjay\")  "],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aEM7maUfhd5E","executionInfo":{"status":"ok","timestamp":1658403068361,"user_tz":-330,"elapsed":523,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"ef831354-5543-4861-cfd9-e93b0a9ec04d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0\n","1\n","2\n","3\n","4\n","5\n","sanjay\n"]}]},{"cell_type":"code","source":["i = 0\n","str1 = \"sanjaykushwah\"\n","while i<len(str1):\n","  if str1[i] == 'a' or str1[i] == 'h':\n","      i+=1\n","      continue\n","  else:\n","    print(str1[i])\n","    i+=1     "],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0Qd-2nyTiMAn","executionInfo":{"status":"ok","timestamp":1658403903427,"user_tz":-330,"elapsed":520,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"c29c05bb-1821-45e0-be1d-e87899092c20"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["s\n","n\n","j\n","y\n","k\n","u\n","s\n","w\n"]}]},{"cell_type":"code","source":["n = int(input(\"Enter the no. of rows = \"))\n","for i in range(n,0,-1):\n","    print(\" \"*i)\n","print(end='')    \n","for j in range(n,0,-1):\n","        print(\"*\"*j)  "],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UOXD7euLk493","executionInfo":{"status":"ok","timestamp":1658404577260,"user_tz":-330,"elapsed":6196,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"b0918761-94bb-4cc3-d735-d2e6e9beef91"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Enter the no. of rows = 5\n","     \n","    \n","   \n","  \n"," \n","*****\n","****\n","***\n","**\n","*\n"]}]},{"cell_type":"code","source":["i = 0\n","str1 = \"sanjaykushwah\"\n","while i<len(str1):\n","  if str1[i] == 'a' or str1[i] == 'h':\n","      i+=1\n","      pass\n","  else:\n","    print(str1[i])\n","    i+=1     "],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4dBAqUCXns0l","executionInfo":{"status":"ok","timestamp":1658405606206,"user_tz":-330,"elapsed":403,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"293bf24a-76b3-442d-d90c-e386805431ce"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["s\n","n\n","j\n","y\n","k\n","u\n","s\n","w\n"]}]},{"cell_type":"code","source":["i=1\n","while i<=10:\n","  print(i)\n","  i+=1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ze65xQCSrlwl","executionInfo":{"status":"ok","timestamp":1658405712557,"user_tz":-330,"elapsed":713,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"aac3603b-dbf8-4dbb-91c0-68c08c13f8bc"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1\n","2\n","3\n","4\n","5\n","6\n","7\n","8\n","9\n","10\n"]}]},{"cell_type":"code","source":["i = 1\n","number = 0\n","\n","number = int(input(\"enter the no. = \"))\n","while i<=10:\n","  print(\"%d X %d = %d \"%(number,i,number*i))\n","  i+=1\n","  print()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"t6has9IXrxCx","executionInfo":{"status":"ok","timestamp":1658406259973,"user_tz":-330,"elapsed":2960,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"f053f522-7035-4fc5-f116-dee73e7a6c76"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["enter the no. = 5\n","5 X 1 = 5 \n","\n","5 X 2 = 10 \n","\n","5 X 3 = 15 \n","\n","5 X 4 = 20 \n","\n","5 X 5 = 25 \n","\n","5 X 6 = 30 \n","\n","5 X 7 = 35 \n","\n","5 X 8 = 40 \n","\n","5 X 9 = 45 \n","\n","5 X 10 = 50 \n","\n"]}]},{"cell_type":"code","source":["i = 1\n","number = 0\n","\n","number = int(input(\"enter the no. = \"))\n","while i<=10:\n","  print(\"{0} X {1} = {2} \".format(number,i,number*i))\n","  i+=1\n","  print()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MOCRmuQEv32O","executionInfo":{"status":"ok","timestamp":1658406923276,"user_tz":-330,"elapsed":4943,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"bcfcb20f-6808-4c2f-f7f2-7b564d35dcf7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["enter the no. = 5\n","5 X 1 = 5 \n","\n","5 X 2 = 10 \n","\n","5 X 3 = 15 \n","\n","5 X 4 = 20 \n","\n","5 X 5 = 25 \n","\n","5 X 6 = 30 \n","\n","5 X 7 = 35 \n","\n","5 X 8 = 40 \n","\n","5 X 9 = 45 \n","\n","5 X 10 = 50 \n","\n"]}]},{"cell_type":"code","source":["limit = int(input(\"enter the no. = \"))\n","a=0\n","b=1\n","count = 0\n","while count < limit :\n","  print(a,end=\" \")\n","  c=a+b\n","  a=b\n","  b=c\n","  count+=1\n"],"metadata":{"id":"wp0bcyKTu_r2","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1658485343526,"user_tz":-330,"elapsed":3997,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"0ed51f71-56a5-449c-acd3-a0cb57502ce5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["enter the no. = 10\n","0 1 1 2 3 5 8 13 21 34 "]}]},{"cell_type":"code","source":["var = 1\n","while(var !=2):\n","  i = int(input(\"Enter the number: \"))\n","  print(\"Enter the value is %d\"%(i))\n","  var += 1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Xgb6by0JVvQ5","executionInfo":{"status":"ok","timestamp":1658484045054,"user_tz":-330,"elapsed":4570,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"070552d5-2a7b-4cc7-cb67-3fd5a1d2c8a6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Enter the number: 64\n","Enter the value is 64\n"]}]},{"cell_type":"code","source":["i = 1\n","while(i<=5):\n","  print(i)\n","  i = i+1\n","else:\n","  print(\"the while loop exhausted\")  "],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AuFRYda3WpBk","executionInfo":{"status":"ok","timestamp":1658484163660,"user_tz":-330,"elapsed":511,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"cac24156-5948-4b54-9343-cfefc8d703d0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1\n","2\n","3\n","4\n","5\n","the while loop exhausted\n"]}]},{"cell_type":"code","source":["i = 1\n","while(i<=5):\n","  print(i)\n","  i+=1\n","  if(i==3):\n","    break\n","else:\n","  print(\"the while loop exhausted\")  "],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"p-ztC-7eXBXJ","executionInfo":{"status":"ok","timestamp":1658484484499,"user_tz":-330,"elapsed":525,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"6f12e010-c2e0-40c0-8cdc-99b3c551196d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1\n","2\n"]}]},{"cell_type":"code","source":["terms = int(input(\"Enter the terms = \"))\n","a = 0\n","b = 1\n","count = 0\n","if terms <= 0 :\n","  print(\"please enter a valid integer\")\n","\n","elif (terms == 1):\n","  print(\"Fibonacci sequence upto \")\n","  print(a)  \n","else:\n","  print(\"Fibonacci sequence:\")\n","  while (count<terms):\n","    print(a,end=' ')\n","    c=a+b\n","    a=b\n","    b=c\n","    count += 1\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aDb8ltzqYdXl","executionInfo":{"status":"ok","timestamp":1658485044849,"user_tz":-330,"elapsed":4258,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"7b81b89d-227c-440f-b65f-025e567423d7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Enter the terms = 10\n","Fibonacci sequence:\n","0 1 1 2 3 5 8 13 21 34 "]}]},{"cell_type":"code","source":["list = [1,2,3,4]\n","count = 1\n","for i in list:\n","  if i==4:\n","    print(\"item matched\")\n","    count += 1\n","    break\n","print(\"found at\",count,\"location\")    "],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qeaZGhX3cqe0","executionInfo":{"status":"ok","timestamp":1658485794693,"user_tz":-330,"elapsed":574,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"b11f948b-2c71-42da-df80-ca187ba8a535"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["item matched\n","found at 2 location\n"]}]},{"cell_type":"code","source":["n = int(input())\n","l = []\n","for i in range(n):\n","  cmd = input().split()\n","  if cmd[0]==\"print\":\n","    print(l)\n","  elif cmd[0]==\"insert\":\n","    l.insert(int(cmd[1]),int(cmd[2]))\n","  elif cmd[0]==\"append\":\n","    l.append(int(cmd[1]))\n","  elif cmd[0]==\"pop\":\n","    l.pop()\n","  elif cmd[0]==\"remove\":\n","    l.remove(int(cmd[1]))\n","  elif cmd[0]==\"sort\":\n","    l=sorted(l) \n","  elif cmd[0]==\"reverse\":\n","    l.reverse()\n","             "],"metadata":{"id":"CPuQXu7cYZlX","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1659070294263,"user_tz":-330,"elapsed":169531,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"eecbe86f-ce03-4f82-c5bd-a724380621d2"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["12\n","insert 0 5\n","insert 1 10\n","insert 0 6\n","print\n","[6, 5, 10]\n","remove 6\n","append 9\n","append 1\n","sort\n","print\n","[1, 5, 9, 10]\n","pop\n","reverse\n","print\n","[9, 5, 1]\n"]}]},{"cell_type":"code","source":["print('''sanjay\"kushwah\"''')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rsrJYjfmX7f0","executionInfo":{"status":"ok","timestamp":1659071986988,"user_tz":-330,"elapsed":410,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"1e46b178-801a-4317-c668-8ad70248e1aa"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["sanjay\"kushwah\"\n"]}]},{"cell_type":"code","source":["print('they said,\"what\\'s going on?\"')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xKJ7ng8NYPSq","executionInfo":{"status":"ok","timestamp":1659072143760,"user_tz":-330,"elapsed":12,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"aa85b8b4-b087-4625-fce5-7677a2d44ce1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["they said,\"what's going on?\"\n"]}]},{"cell_type":"code","source":["print(\"they said,\\\"what's going on?\\\"\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"l6nXje7EaBsv","executionInfo":{"status":"ok","timestamp":1659072212875,"user_tz":-330,"elapsed":415,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"f7e12452-0833-4698-ff0f-4adf488c4d22"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["they said,\"what's going on?\"\n"]}]},{"cell_type":"code","source":["print(\"This is \\x48\\x45\\x58 representation\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Cp6MU1yRad5A","executionInfo":{"status":"ok","timestamp":1659072344768,"user_tz":-330,"elapsed":419,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"f8156674-61e3-48a3-d7aa-a4514c99e64c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["This is HEX representation\n"]}]},{"cell_type":"code","source":["print(r\"c:\\\\users\\\\devanssh sarma\\\\python32\")\n","print(R\"sanjay\\\\kushwah\\\\:this234 me\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yjnBycLVazQh","executionInfo":{"status":"ok","timestamp":1659072479219,"user_tz":-330,"elapsed":643,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"34147e83-0f3f-4a2d-c13e-9f1d74a26fba"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["c:\\\\users\\\\devanssh sarma\\\\python32\n","sanjay\\\\kushwah\\\\:this234 me\n"]}]},{"cell_type":"code","source":["a='sanjay kushwah'\n","a.capitalize()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"oZ1lG78YbTGp","executionInfo":{"status":"ok","timestamp":1659072704068,"user_tz":-330,"elapsed":537,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"eaf6b3fc-7294-4f12-fb02-6f32d93b9a72"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'Sanjay kushwah'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["list = [1,2,3,4,5,6]\n","print(list)\n","list[2]=10\n","print(list)\n","list[1:3]=[89,78]\n","print(list)\n","list[-1]=25\n","print(list)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qYjmGDwuaQi5","executionInfo":{"status":"ok","timestamp":1659089121721,"user_tz":-330,"elapsed":15,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"8197b2e2-757d-467a-8801-858a10cfccd4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[1, 2, 3, 4, 5, 6]\n","[1, 2, 10, 4, 5, 6]\n","[1, 89, 78, 4, 5, 6]\n","[1, 89, 78, 4, 5, 25]\n"]}]},{"cell_type":"code","source":["string = \"abracadabra\"\n","l = list(string)\n","d=l[:5]+\"k\"+l[6:]\n","print(string)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":219},"id":"QxiS0Ocza8S1","executionInfo":{"status":"error","timestamp":1659158182219,"user_tz":-330,"elapsed":535,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"a3d77c60-cb53-4b99-933b-1397b4d84276"},"execution_count":null,"outputs":[{"output_type":"error","ename":"TypeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-7-615c17aeb38c>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mstring\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"abracadabra\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0ml\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mstring\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0md\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0ml\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;36m5\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m+\u001b[0m\u001b[0;34m\"k\"\u001b[0m\u001b[0;34m+\u001b[0m\u001b[0ml\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m6\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mstring\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mTypeError\u001b[0m: 'list' object is not callable"]}]},{"cell_type":"code","source":["list=[\"sanjay\",\"satyam\",\"vishal\",\"lavkesh\"]\n","for i in list:\n","  print(i)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"H2fqnT4DcdeA","executionInfo":{"status":"ok","timestamp":1659089660040,"user_tz":-330,"elapsed":19,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"ad4beb73-8338-4753-d3af-53eb0f8f8d8a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["sanjay\n","satyam\n","vishal\n","lavkesh\n"]}]},{"cell_type":"code","source":["I=[]\n","n=int(input(\"enter the number of element in the list\"))\n","for i in range(0,n):\n","  I.append(input(\"enter the item:\"))\n","print(\"printing the list items:\") \n","for i in I:\n","  print(i,end=\" \")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wOC8Lh02c5D9","executionInfo":{"status":"ok","timestamp":1659089971333,"user_tz":-330,"elapsed":45895,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"f1a3781c-37ac-443a-ebcb-172d59074c88"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["enter the number of element in the list2\n","enter the item:1\n","enter the item:2\n","printing the list items:\n","1 2 "]}]},{"cell_type":"code","source":["list = [2,0,1,2,3,4]\n","print(\"printing original list:\")\n","for i in list:\n","  print(i,end=\" \")\n","list.remove(2)\n","print(\"\\nprinting the list after the removal of first element...\") \n","for i in list:\n","  print(i,end=\" \") "],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oFZSia5Pe9TU","executionInfo":{"status":"ok","timestamp":1659156716459,"user_tz":-330,"elapsed":523,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"80aeee09-f7fb-4f54-963b-b9dab736357a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["printing original list:\n","2 0 1 2 3 4 \n","printing the list after the removal of first element...\n","0 1 2 3 4 "]}]},{"cell_type":"code","source":["string = string[:5] + \"k\" + string[6:]\n","print(string)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jEJzv_9LhvGl","executionInfo":{"status":"ok","timestamp":1659090987371,"user_tz":-330,"elapsed":517,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"40164410-5941-4385-8832-1d4faf436df8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["abrackdabra\n"]}]},{"cell_type":"code","source":["string=(\"sanjay kushwah\")\n","s = list(string)\n","print(s)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8a4JBiu3iHVx","executionInfo":{"status":"ok","timestamp":1659172285615,"user_tz":-330,"elapsed":682,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"01de7887-3850-41e7-ef72-4e05cd900bdd"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['s', 'a', 'n', 'j', 'a', 'y', ' ', 'k', 'u', 's', 'h', 'w', 'a', 'h']\n"]}]},{"cell_type":"markdown","source":["**30/07/2022**"],"metadata":{"id":"yf1GcdzyoTOt"}},{"cell_type":"code","source":["list1 = [1,22,3,55,98,65,65,13,29]\n","list2 = []\n","for i in list1:\n","  if i not in list2:\n","    list2.append(i)\n","print(list2)    \n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Bk2pALmLZRRg","executionInfo":{"status":"ok","timestamp":1659156001095,"user_tz":-330,"elapsed":20,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"cad44951-dc8c-483d-e6c2-008a9ca45be9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[1, 22, 3, 55, 98, 65, 13, 29]\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"qpIIp6Jqqcu7"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["list1 = [3,4,5,9,10,12,24]\n","sum=0\n","for i in list1:\n","  \n","  sum+=i\n","print(sum)  \n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WdKYvZXVbCDG","executionInfo":{"status":"ok","timestamp":1659157378794,"user_tz":-330,"elapsed":14,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"c0fc632b-57db-4efd-a493-937ee2712dab"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["67\n"]}]},{"cell_type":"code","source":["list1 = [1,2,3,4,5,6]\n","\n","list2 = [7,8,9,2,10]\n","\n","for x in list1:\n","  for y in list2:\n","    if x==y:\n","      print(\"the common element is:\",x)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Zr5p3nm5fGAu","executionInfo":{"status":"ok","timestamp":1659157478215,"user_tz":-330,"elapsed":431,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"6d451af0-ee80-4d01-830a-8eb73c277bb4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["the common element is: 2\n"]}]},{"cell_type":"code","source":["tup1 = (\"sanjay kushwah\")\n","print(type(tup1))\n","tup2 = (\"sanjay kushwah\",)\n","print(type(tup2))\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OoDjriAvhQ1m","executionInfo":{"status":"ok","timestamp":1659158040341,"user_tz":-330,"elapsed":478,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"9209294b-f3e3-4374-dc25-435604df14c4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'str'>\n","<class 'tuple'>\n"]}]},{"cell_type":"code","source":["tuple1 = tuple(input(\"enter the tuple element...\"))\n","print(tuple1)\n","count=0\n","for i in tuple1:\n","  print(\"tuple1[%d]=%s\"%(count,i))\n","  count+=1"],"metadata":{"id":"sd2IN6BEqees","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1659340695703,"user_tz":-330,"elapsed":6064,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"2d7dd560-01f5-47a3-efe8-d084a64970db"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["enter the tuple element...123456\n","('1', '2', '3', '4', '5', '6')\n","tuple1[0]=1\n","tuple1[1]=2\n","tuple1[2]=3\n","tuple1[3]=4\n","tuple1[4]=5\n","tuple1[5]=6\n"]}]},{"cell_type":"code","source":["tuple1 = (10,20,30,40,50,60)\n","print(tuple1)\n","count=0\n","for i in tuple1:\n","  print(\"tuple1[%d]=%d\"%(count,i))\n","  count+=1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"s90saL8UZYL9","executionInfo":{"status":"ok","timestamp":1659340558859,"user_tz":-330,"elapsed":376,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"7538354f-c8fe-4b42-e86f-eaa5bffbde2e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(10, 20, 30, 40, 50, 60)\n","tuple1[0]=10\n","tuple1[1]=20\n","tuple1[2]=30\n","tuple1[3]=40\n","tuple1[4]=50\n","tuple1[5]=60\n"]}]},{"cell_type":"code","source":["tuple = (1,2,3,4,5,6,7)\n","print(tuple[1:])\n","print(tuple[:4])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4M6QQ4QzakxW","executionInfo":{"status":"ok","timestamp":1659341618841,"user_tz":-330,"elapsed":427,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"90e95441-d7f7-4d22-881c-aecc216a3d1e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(2, 3, 4, 5, 6, 7)\n","(1, 2, 3, 4)\n"]}]},{"cell_type":"code","source":["print(tuple[1:5])\n","print(tuple[0:6:2])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"eOIGPNpJeH83","executionInfo":{"status":"ok","timestamp":1659341719589,"user_tz":-330,"elapsed":419,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"b61b88dd-04b9-4478-ff67-acd1ab86cbd2"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(2, 3, 4, 5)\n","(1, 3, 5)\n"]}]},{"cell_type":"code","source":["tuple1=(1,2,3,4,5,6)\n","print(tuple1[-1])\n","print(tuple1[-4])\n","print(tuple1[-3:-1])\n","print(tuple1[:-1])\n","print(tuple1[-2:])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JPUON80hedz7","executionInfo":{"status":"ok","timestamp":1659341941048,"user_tz":-330,"elapsed":383,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"c2053e5d-87a6-41e8-ac12-ed813014327b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["6\n","3\n","(4, 5)\n","(1, 2, 3, 4, 5)\n","(5, 6)\n"]}]},{"cell_type":"code","source":["tuple1 = (1,2,3,4,5,6)\n","print(tuple1)\n","#del tuple1[0]\n","#print(tuple1)\n","#del tuple1\n","print(tuple1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PVigDkVHfL0R","executionInfo":{"status":"ok","timestamp":1659342117314,"user_tz":-330,"elapsed":474,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"cccbc21d-8a99-4678-8870-2c7fcbe64839"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(1, 2, 3, 4, 5, 6)\n","(1, 2, 3, 4, 5, 6)\n"]}]},{"cell_type":"code","source":["#HackerRank\n","def count_substring(string, sub_string):\n","    list1=list(string)\n","    list2=list(sub_string)\n","    l1=[]\n","    l2=[]\n","    s=0\n","    for j in list2:\n","        l2.append(j)\n","        \n","    for i in list1:\n","        if i==l2[0]:\n","            break    \n","        else :\n","            s+=1\n","        \n","                 \n","    return s\n","\n","if __name__ == '__main__':\n","    string = input().strip()\n","    sub_string = input().strip()\n","    \n","    count = count_substring(string, sub_string)\n","    print(count)"],"metadata":{"id":"7SaBEcHPf2xd"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["Days = {\"monday\",\"tuesday\",\"wednesday\",\"thursday\",\"friday\",\"saturday\",\"sunday\"}\n","print(Days)\n","print(type(Days))\n","print(\"looping through the set elements...\")\n","for i in Days:\n","  print(i)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Npc2bYixpcTh","executionInfo":{"status":"ok","timestamp":1659412463099,"user_tz":-330,"elapsed":15,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"6d525c52-731a-4ba8-f825-946ea505807a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{'thursday', 'wednesday', 'monday', 'friday', 'saturday', 'tuesday', 'sunday'}\n","<class 'set'>\n","looping through the set elements...\n","thursday\n","wednesday\n","monday\n","friday\n","saturday\n","tuesday\n","sunday\n"]}]},{"cell_type":"code","source":["Days = set([\"monday\",\"tuesday\",\"wednesday\",\"thursday\",\"friday\",\"saturday\",\"sunday\"])\n","print(Days)\n","print(type(Days))\n","print(\"looping through the set element...\")\n","for i in Days:\n","  print(i)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1uqxEBGRsKUY","executionInfo":{"status":"ok","timestamp":1659412601134,"user_tz":-330,"elapsed":400,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"cec4aa04-39a6-4417-b20d-59f0ce1cc1d7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{'thursday', 'wednesday', 'monday', 'friday', 'saturday', 'tuesday', 'sunday'}\n","<class 'set'>\n","looping through the set element...\n","thursday\n","wednesday\n","monday\n","friday\n","saturday\n","tuesday\n","sunday\n"]}]},{"cell_type":"code","source":["x=([\"monday\",\"tuesday\",\"wednesday\",\"thursday\",\"friday\",\"saturday\",\"sunday\"])\n","print(type(x))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ddmjwlcgsyP_","executionInfo":{"status":"ok","timestamp":1659412753592,"user_tz":-330,"elapsed":398,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"49507898-b0eb-413b-c8e1-677a8b23fc10"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'list'>\n"]}]},{"cell_type":"code","source":["set1 = {1,2,3,\"javaTpoint\",20.5,14}\n","print(type(set1))\n","set2={1,2,3,(\"javatpoint\",4)}\n","print(type(set2))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0-m-Ae6Ptcwj","executionInfo":{"status":"ok","timestamp":1659413382029,"user_tz":-330,"elapsed":526,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"2f5946c0-a1cd-4955-f014-efb77743b589"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'set'>\n","<class 'set'>\n"]}]},{"cell_type":"code","source":["set3 = {}\n","print(type(set3))\n","set4 = set()\n","print(type(set4))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YXanm7JmuPQ8","executionInfo":{"status":"ok","timestamp":1659413178159,"user_tz":-330,"elapsed":402,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"21c7d843-983d-43b9-d9e1-493a43e364e9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'dict'>\n","<class 'set'>\n"]}]},{"cell_type":"code","source":["set5 = {1,2,3,4,5,6,7,8,9,10}\n","print(\"Return set with unique element:\",set5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hzscrXIgu8jK","executionInfo":{"status":"ok","timestamp":1659413250214,"user_tz":-330,"elapsed":390,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"c1a82718-e201-4e59-cf67-b0d34d87541c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Return set with unique element: {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}\n"]}]},{"cell_type":"code","source":["# Adding items to the set\n","\n","months = set([\"january\",\"february\",\"march\",\"april\",\"may\",\"june\"])\n","print(\"\\nprinting the original set...\")\n","print(months)\n","months.add(\"july\")\n","months.add(\"august\")\n","print(\"\\nprinting the modified set...\")\n","print(months)\n","print(\"\\nlooping through the set element...\")\n","for i in months:\n","  print(i)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RR7ciOydvPVm","executionInfo":{"status":"ok","timestamp":1659414570938,"user_tz":-330,"elapsed":374,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"b584020c-d17c-41ea-b5b6-109785590630"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","printing the original set...\n","{'february', 'march', 'may', 'june', 'january', 'april'}\n","\n","printing the modified set...\n","{'february', 'march', 'may', 'june', 'january', 'july', 'april', 'august'}\n","\n","looping through the set element...\n","february\n","march\n","may\n","june\n","january\n","july\n","april\n","august\n"]}]},{"cell_type":"code","source":["# to add more than one item in the set,python provides the Update() method . it accepts iterable as an argument.\n","\n","months = set([\"january\",\"february\",\"march\",\"april\",\"may\",\"june\"])\n","print([\"\\nprinting the original set...\"])\n","print(months)\n","print(\"\\nupdating the original set...\")\n","months.update([\"july\",\"August\",\"september\",\"october\"])\n","print(\"\\nprinting the modified set...\")\n","print(months)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-CpFLY5Ix4rL","executionInfo":{"status":"ok","timestamp":1659414474333,"user_tz":-330,"elapsed":17,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"a1744b92-240e-481a-d271-03271b6cf467"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['\\nprinting the original set...']\n","{'february', 'march', 'may', 'june', 'january', 'april'}\n","\n","updating the original set...\n","\n","printing the modified set...\n","{'february', 'march', 'may', 'june', 'january', 'july', 'August', 'october', 'april', 'september'}\n"]}]},{"cell_type":"code","source":["#removing items from the set\n","# discard() & remove()\n","\n","months = set([\"january\",\"february\",\"march\",\"april\",\"may\",\"june\"])\n","print(\"\\nprinting the original set...\")\n","print(months)\n","print(\"\\nRemoving items through discard() method...\")\n","months.discard(\"feb\")#will not give an error although the key feb is not available in the set\n","print(\"\\nprinting the modified set...\")\n","print(months)\n","print(\"\\nRemoving items through remove() method...\")\n","#months.remove(\"jan\") it will give an error as the jan is not available in the set.\n","print(\"\\nprinting the modified set...\")\n","print(months)"],"metadata":{"id":"d6Pt8mzi09NQ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1659427207862,"user_tz":-330,"elapsed":13,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"3912365f-a5e2-4aa5-f8f6-a9665dd8d62d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","printing the original set...\n","{'may', 'january', 'june', 'february', 'april', 'march'}\n","\n","Removing items through discard() method...\n","\n","printing the modified set...\n","{'may', 'january', 'june', 'february', 'april', 'march'}\n","\n","Removing items through remove() method...\n","\n","printing the modified set...\n","{'may', 'january', 'june', 'february', 'april', 'march'}\n"]}]},{"cell_type":"code","source":["# Union of two sets\n","\n","Days1 = {\"monday\",\"tuesday\",\"wednesday\",\"thursday\",\"sunday\"}\n","Days2 = {\"friday\",\"saturday\",\"sunday\"}\n","print(Days1|Days2)#printing the union of sets"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9yQeRUljkk7F","executionInfo":{"status":"ok","timestamp":1659520412851,"user_tz":-330,"elapsed":428,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"3be271de-0d16-4164-d40f-90a318052fb3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{'friday', 'wednesday', 'sunday', 'thursday', 'monday', 'tuesday', 'saturday'}\n"]}]},{"cell_type":"code","source":["# using union() method\n","\n","Days1 = {\"monday\",\"tuesday\",\"wednesday\",\"thursday\"}\n","Days2 = {\"friday\",\"saturday\",\"sunday\"}\n","print(Days1.union(Days2))#printing the union of the sets"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lXqMdFcxmJAb","executionInfo":{"status":"ok","timestamp":1659520381911,"user_tz":-330,"elapsed":512,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"f2cf71eb-c96a-4b59-9da7-64552d9d3e0e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{'friday', 'sunday', 'tuesday', 'thursday', 'monday', 'wednesday', 'saturday'}\n"]}]},{"cell_type":"code","source":["# use of  and & operator\n","Days1 = {\"monday\",\"tuesday\",\"wednesday\",\"thursday\"}\n","Days2 = {\"monday\",\"tuesday\",\"sunday\",\"frieday\"}\n","print(Days1 & Days2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cS1VD7llnG4H","executionInfo":{"status":"ok","timestamp":1659428124270,"user_tz":-330,"elapsed":850,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"214a0d7d-fd7e-48b2-b6be-dee3f110efa9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{'monday', 'tuesday'}\n"]}]},{"cell_type":"markdown","source":["#intersection"],"metadata":{"id":"xXZWlL-POG7z"}},{"cell_type":"code","source":["# use of intersection()\n","\n","set1 = {\"devansh\",\"john\",\"devid\",\"martin\"}\n","set2 = {\"steve\",\"milan\",\"devid\",\"martin\"}\n","print(set2.intersection(set1))#prints the intersection of the two sets"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QlorUhQrn83z","executionInfo":{"status":"ok","timestamp":1659519977015,"user_tz":-330,"elapsed":3,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"6d320610-f980-412b-abb0-9f007d68aeae"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{'devid', 'martin'}\n"]}]},{"cell_type":"code","source":["s=set([\"a\",\"b\",\"c\"])\n","s.pop()\n","print(s)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kMp-ybqfo3Si","executionInfo":{"status":"ok","timestamp":1659428667477,"user_tz":-330,"elapsed":715,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"3faceb46-3862-4ac8-9bf7-5d2a70e41aec"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{'a', 'b'}\n"]}]},{"cell_type":"code","source":["s=set([\"a\",\"b\",\"c\"])\n","s.remove(\"b\")\n","print(s)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oWpEkfUEpOH_","executionInfo":{"status":"ok","timestamp":1659428762410,"user_tz":-330,"elapsed":778,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"36762515-f071-4fd8-cc26-e79209db7528"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{'c', 'a'}\n"]}]},{"cell_type":"code","source":["# intersection_update() method\n","\n","a = {\"Devansh\",\"bob\",\"castle\"}\n","b = {\"castle\",\"dude\",\"emyway\"}\n","c = {\"fuson\",\"gaurav\",\"castle\"}\n","\n","a.intersection_update(b,c)\n","print(a)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UTQI1EjCqCIf","executionInfo":{"status":"ok","timestamp":1659429179687,"user_tz":-330,"elapsed":634,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"7c2da3d5-6219-44d9-81f5-a5c56b1d33a4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{'castle'}\n"]}]},{"cell_type":"code","source":["set1 = {1,2,3,4,5,6,7}\n","set2 = {1,2,20,32,5,9}\n","set3 = set1.intersection(set2)\n","print(set3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vGQ2kOQfsJz-","executionInfo":{"status":"ok","timestamp":1659429371756,"user_tz":-330,"elapsed":601,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"038f8e1f-4c56-4bbe-f930-4d04120f6b46"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{1, 2, 5}\n"]}]},{"cell_type":"code","source":["Days1 = {\"monday\",\"tuesday\",\"wednesday\",\"thursday\"}\n","Days2 = {\"monday\",\"tuesday\",\"sunday\"}\n","print(Days1-Days2)"],"metadata":{"id":"rDgxKRm_tBr0","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1659520547295,"user_tz":-330,"elapsed":553,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"36a9d232-0d30-4b80-d10e-e9732961ff58"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{'thursday', 'wednesday'}\n"]}]},{"cell_type":"code","source":["# using difference() method\n","Days1 = {\"monday\",\"tuesday\",\"wednesday\",\"thursday\"}\n","Days2 = {\"monday\",\"tuesday\",\"sunday\"}\n","print(Days1.difference(Days2))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"opxhBVBjL0x6","executionInfo":{"status":"ok","timestamp":1659521553270,"user_tz":-330,"elapsed":595,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"0b7c784d-4fef-4872-b5d3-64855307a18e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{'thursday', 'wednesday'}\n"]}]},{"cell_type":"markdown","source":["#symmetric Operator"],"metadata":{"id":"0YeH1TMrMnY9"}},{"cell_type":"code","source":["#using ^ Operator\n","a = {1,2,3,4,5,6,7} \n","b = {1,2,9,8,7,10}\n","c = a^b\n","print(c)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"n8nIY12aMfnb","executionInfo":{"status":"ok","timestamp":1659521754028,"user_tz":-330,"elapsed":16,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"cd898b67-2151-4be4-b8a5-4fd208c2f523"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{3, 4, 5, 6, 8, 9, 10}\n"]}]},{"cell_type":"code","source":["a = {1,2,3,4,5,6,7} \n","b = {1,2,9,8,7,10}\n","c = a.symmetric_difference(b)\n","print(c)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NMQtkG7ENVDt","executionInfo":{"status":"ok","timestamp":1659521887170,"user_tz":-330,"elapsed":604,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"d08ead0f-0e11-429c-b16a-5590308de2f7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{3, 4, 5, 6, 8, 9, 10}\n"]}]},{"cell_type":"markdown","source":["#Set comparison"],"metadata":{"id":"ibLNi-y8OAnA"}},{"cell_type":"code","source":["Days1 = {\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\"} \n","Days2 = {\"Monday\", \"Tuesday\"} \n","Days3 = {\"Monday\", \"Tuesday\", \"Friday\"} \n"," \n","#Days1 is the superset of Days2 hence it will print true. \n","print (Days1>Days2) \n"," \n","#prints false since Days1 is not the subset of Days2 \n","print (Days1<Days2) \n"," \n","#prints false since Days2 and Days3 are not equivalent \n","print (Days2 == Days3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ADqLSavhN7v2","executionInfo":{"status":"ok","timestamp":1659522312356,"user_tz":-330,"elapsed":511,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"a551282a-bccb-4ce7-8fd2-d0cda1827f9b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["True\n","False\n","False\n"]}]},{"cell_type":"markdown","source":["#frozenset"],"metadata":{"id":"CJQrA0MzRs_0"}},{"cell_type":"code","source":["\n","Dictionary = {\"name\":\"john\",\"country\":\"usa\",\"id\":101,\"sanjay\":\"kushwah\"}\n","print(type(Dictionary))\n","Frozenset = frozenset(Dictionary)\n","print(Frozenset)\n","print(type(Frozenset))\n","for i in Frozenset:\n","  print(i)"],"metadata":{"id":"L7F7ww39PaRB","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1659592009027,"user_tz":-330,"elapsed":512,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"13cccf5a-ea02-4399-c9c4-5c81e7674f32"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'dict'>\n","frozenset({'country', 'name', 'sanjay', 'id'})\n","<class 'frozenset'>\n","country\n","name\n","sanjay\n","id\n"]}]},{"cell_type":"code","source":["Frozenset=frozenset(\"a\")\n","print(Frozenset)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5F42SPBYR0aG","executionInfo":{"status":"ok","timestamp":1659590293739,"user_tz":-330,"elapsed":417,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"ae32f65a-5299-4326-c1bd-e5b3087c9302"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["frozenset({'a'})\n"]}]},{"cell_type":"markdown","source":["# set programming example"],"metadata":{"id":"gw3mbVBETAPa"}},{"cell_type":"code","source":["# To add multiple element to the set.\n","set1 = set([1,2,3,\"john\",\"cs\"])\n","set1.update([\"apple\",\"mango\",\"grapes\"])\n","print(set1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3kLQqtpTStcU","executionInfo":{"status":"ok","timestamp":1659590533113,"user_tz":-330,"elapsed":679,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"d480a280-dd81-468a-fdf2-96ef9f005330"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{1, 2, 3, 'john', 'cs', 'mango', 'grapes', 'apple'}\n"]}]},{"cell_type":"code","source":["# write a program to remove the given number from the set.\n","my_set = {1,2,3,4,12,45,6,7,8}\n","n = int(input(\"enter the number you want to remove=\"))\n","my_set.discard(n)\n","print(\"after removing:\",my_set)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1R3dCJpYTk3g","executionInfo":{"status":"ok","timestamp":1659590715253,"user_tz":-330,"elapsed":20725,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"78ee32fe-4efe-419f-fd36-2d86154b31b6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["enter the number you want to remove=10\n","after removing: {1, 2, 3, 4, 6, 7, 8, 12, 45}\n"]}]},{"cell_type":"code","source":["# write a program to find the union between two set.\n","set1 = set([\"peter\",\"joseph\",65,59,96])\n","set2 = set([\"peter\",1,2,\"joseph\"])\n","set3 = set1.union(set2)\n","print(set3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6XXFQsqlUPG3","executionInfo":{"status":"ok","timestamp":1659591224858,"user_tz":-330,"elapsed":415,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"91c59101-5847-44b5-8f9e-d8a17e77e436"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{96, 65, 'joseph', 1, 2, 59, 'peter'}\n"]}]},{"cell_type":"code","source":["set1 = {\"peter\",\"joseph\",65,59,96}\n","set2 = {\"peter\",1,2,\"joseph\"}\n","set3 = set1.union(set2)\n","print(set3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jphTeywHWHzi","executionInfo":{"status":"ok","timestamp":1659591292243,"user_tz":-330,"elapsed":419,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"52e461f8-fb44-42e4-c503-5e319365c609"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{96, 65, 'joseph', 1, 2, 59, 'peter'}\n"]}]},{"cell_type":"code","source":["# write a program to find the intersection between two sets.\n","set1 = {23,44,56,67,90,45,\"Javatpoint\"} \n","set2 = {13,23,56,76,\"Sachin\"} \n","set3 = set1.intersection(set2)\n","print(set3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yeIp4EE4Wm_d","executionInfo":{"status":"ok","timestamp":1659591498858,"user_tz":-330,"elapsed":695,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"4d9b4cc4-d050-40c1-bc15-f669a31a9e45"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{56, 23}\n"]}]},{"cell_type":"code","source":["set1 = {23,44,56,67,90,45,\"Javatpoint\"} \n","set2 = {13,23,56,76,\"Sachin\"} \n","set3 = (set1 & set2)\n","print(set3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iXJV7mw9XMbJ","executionInfo":{"status":"ok","timestamp":1659591580596,"user_tz":-330,"elapsed":699,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"28026e0f-1e1d-4765-b72b-25b51bc4250a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{56, 23}\n"]}]},{"cell_type":"markdown","source":["# Dictionary"],"metadata":{"id":"1k1Wi5cMaLO-"}},{"cell_type":"code","source":["Dict = {\"name\":\"tom\",\"age\":22}"],"metadata":{"id":"zuSW3qnEXpLO"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["Employee = {\"Name\": \"John\", \"Age\": 29, \"salary\":25000,\"Company\":\"GOOGLE\"} \n","print(type(Employee)) \n","print(\"printing Employee data .... \") \n","print(Employee)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3ABegg0sZvMq","executionInfo":{"status":"ok","timestamp":1659592205638,"user_tz":-330,"elapsed":422,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"ff465e0f-0bd2-4a94-aa1a-a9876f95c3fd"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'dict'>\n","printing Employee data .... \n","{'Name': 'John', 'Age': 29, 'salary': 25000, 'Company': 'GOOGLE'}\n"]}]},{"cell_type":"code","source":["# Creating an empty Dictionary \n","Dict = {} \n","print(\"Empty Dictionary: \") \n","print(Dict) \n"," \n","# Creating a Dictionary \n","# with dict() method \n","Dict = dict({1: 'Java', 2: 'T', 3:'Point'}) \n","print(\"\\nCreate Dictionary by using dict(): \") \n","print(Dict)  \n","# Creating a Dictionary \n","# with each item as a Pair \n","Dict = dict([(1, 'Devansh'), (2, 'Sharma')]) \n","print(\"\\nDictionary with each item as a pair: \") \n","print(Dict)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MOKERxLZacq0","executionInfo":{"status":"ok","timestamp":1659592433159,"user_tz":-330,"elapsed":1229,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"67cf8394-c4e8-4aa0-e9da-1cce3c685eb8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Empty Dictionary: \n","{}\n","\n","Create Dictionary by using dict(): \n","{1: 'Java', 2: 'T', 3: 'Point'}\n","\n","Dictionary with each item as a pair: \n","{1: 'Devansh', 2: 'Sharma'}\n"]}]},{"cell_type":"code","source":["Employee = {\"Name\": \"John\", \"Age\": 29, \"salary\":25000,\"Company\":\"GOOGLE\"} \n","print(type(Employee)) \n","print(\"printing Employee data .... \") \n","print(\"Name : %s\" %Employee[\"Name\"]) \n","print(\"Age : %d\" %Employee[\"Age\"]) \n","print(\"Salary : %d\" %Employee[\"salary\"]) \n","print(\"Company : %s\" %Employee[\"Company\"])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3k5kZMWRa3iV","executionInfo":{"status":"ok","timestamp":1659592566699,"user_tz":-330,"elapsed":625,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"d9544eb0-1abd-4818-bec9-0552d7639d75"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'dict'>\n","printing Employee data .... \n","Name : John\n","Age : 29\n","Salary : 25000\n","Company : GOOGLE\n"]}]},{"cell_type":"code","source":["# Creating an empty Dictionary \n","Dict = {} \n","print(\"Empty Dictionary: \") \n","print(Dict) \n"," \n","# Adding elements to dictionary one at a time \n","Dict[0] = 'Peter' \n","Dict[2] = 'Joseph' \n","\n","Dict[3] = 'Ricky' \n","print(\"\\nDictionary after adding 3 elements: \") \n","print(Dict) \n"," \n","# Adding set of values \n","# with a single Key \n","# The Emp_ages doesn't exist to dictionary \n","Dict['Emp_ages'] = 20, 33, 24 \n","print(\"\\nDictionary after adding 3 elements: \") \n","print(Dict) \n"," \n","# Updating existing Key's Value \n","Dict[3] = 'JavaTpoint' \n","print(\"\\nUpdated key value: \") \n","print(Dict)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AJaZfYFycQNQ","executionInfo":{"status":"ok","timestamp":1659592938709,"user_tz":-330,"elapsed":418,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"97cc3e0c-cf98-47ae-b358-de04dd34f73e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Empty Dictionary: \n","{}\n","\n","Dictionary after adding 3 elements: \n","{0: 'Peter', 2: 'Joseph', 3: 'Ricky'}\n","\n","Dictionary after adding 3 elements: \n","{0: 'Peter', 2: 'Joseph', 3: 'Ricky', 'Emp_ages': (20, 33, 24)}\n","\n","Updated key value: \n","{0: 'Peter', 2: 'Joseph', 3: 'JavaTpoint', 'Emp_ages': (20, 33, 24)}\n"]}]},{"cell_type":"code","source":["Employee = {\"name\":\"bhanu\",\"age\":22,\"company\":\"google\",\"city\":\"bhopal\"}\n","print(type(Employee))\n","print(Employee)\n","Employee[\"name\"]=input(\"enter the employee name = \")\n","Employee[\"age\"]=int(input(\"enter the employee age = \"))\n","Employee[\"company\"]=input(\"enter the company name = \")\n","Employee[\"city\"]=input(\"enter the city name = \")\n","print(\"new data = \")\n","print(Employee)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FTjLWXojcs7C","executionInfo":{"status":"ok","timestamp":1659593452756,"user_tz":-330,"elapsed":25459,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"16b953d5-843f-46ff-c24e-6a41f15033b7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'dict'>\n","{'name': 'bhanu', 'age': 22, 'company': 'google', 'city': 'bhopal'}\n","enter the employee name = vishal\n","enter the employee age = 23\n","enter the company name = infosys\n","enter the city name = bhopal\n","new data = \n","{'name': 'vishal', 'age': 23, 'company': 'infosys', 'city': 'bhopal'}\n"]}]},{"cell_type":"markdown","source":["Deleting elements using del keyword"],"metadata":{"id":"3uHYjUDVfA9_"}},{"cell_type":"code","source":["#Deleting elements using del keyword\n","Employee = {\"Name\": \"John\", \"Age\": 29, \"salary\":25000,\"Company\":\"GOOGLE\"} \n","print(type(Employee)) \n","print(\"printing Employee data .... \") \n","print(Employee) \n","print(\"Deleting some of the employee data\") \n","del Employee[\"Name\"] \n","del Employee[\"Company\"] \n","print(\"printing the modified information \") \n","print(Employee)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NL-d6BDPerCC","executionInfo":{"status":"ok","timestamp":1659593642956,"user_tz":-330,"elapsed":422,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"e9f95637-10d5-4df9-f8f9-a92758135696"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'dict'>\n","printing Employee data .... \n","{'Name': 'John', 'Age': 29, 'salary': 25000, 'Company': 'GOOGLE'}\n","Deleting some of the employee data\n","printing the modified information \n","{'Age': 29, 'salary': 25000}\n"]}]},{"cell_type":"code","source":["days = {\"monday\",\"tuesday\",\"wednesday\",\"thursday\",\"friday\",\"saturday\",\"sunday\"}\n","print(days)\n","print(type(days))\n","print(\"looping through the set element...\")\n","for i in days:\n","  print(i)"],"metadata":{"id":"TtC1VuWVibqS","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1659758529241,"user_tz":-330,"elapsed":40,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"e3fc20b7-7f4b-4af1-8edf-095ac766e195"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{'tuesday', 'wednesday', 'friday', 'saturday', 'thursday', 'sunday', 'monday'}\n","<class 'set'>\n","looping through the set element...\n","tuesday\n","wednesday\n","friday\n","saturday\n","thursday\n","sunday\n","monday\n"]}]},{"cell_type":"code","source":["months = set(\"[january\",\"february\",\"march\",\"april\",\"may\",\"june\"])\n","print(\"\\nprinting the original set...\")\n","print(months)\n"],"metadata":{"id":"aJZcyBFBUeYH"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#python function"],"metadata":{"id":"OQehhUC7Ukc-"}},{"cell_type":"code","source":["# function definition\n","def hello_world():\n","  print(\"hello world\")\n","# function calling\n","hello_world()  "],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iD3DKd-_Uiop","executionInfo":{"status":"ok","timestamp":1659758714755,"user_tz":-330,"elapsed":462,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"1d312149-ba34-4865-bf72-03f5e92f2810"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["hello world\n"]}]},{"cell_type":"code","source":["# definition function\n","def sum():\n","  a=20\n","  b=30\n","  c=a+b\n","  return c\n","\n","print(\"the sum = \",sum())  "],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XrGZupKzUqzg","executionInfo":{"status":"ok","timestamp":1659758718469,"user_tz":-330,"elapsed":8,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"88440c71-69dc-433a-bdd2-9aeff24bc691"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["the sum =  50\n"]}]},{"cell_type":"code","source":["# defining the function\n","def func(name):\n","  print(\"Hi\",name,\"how are you\")\n","\n","func(\"sanjay\")  "],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wN8eoEAeUvFV","executionInfo":{"status":"ok","timestamp":1659758726447,"user_tz":-330,"elapsed":503,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"e2442c98-06fc-490b-b550-44f7b75ed4a7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Hi sanjay how are you\n"]}]},{"cell_type":"code","source":["# python function to calculate the sum of two variable\n","# defining the function\n","def sum(a,b):\n","  return a+b\n","\n","x=int(input(\"enter the first number = \"))\n","y=int(input(\"enter the second number = \"))\n","\n","print(\"sum = \",sum(x,y))\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WXyzlm3AUzDA","executionInfo":{"status":"ok","timestamp":1659758741536,"user_tz":-330,"elapsed":10699,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"fb54ac5a-bcc2-4e40-9fc9-e680d38d35c5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["enter the first number = 20\n","enter the second number = 50\n","sum =  70\n"]}]},{"cell_type":"code","source":["#Example 1 Passing Immutable Object (List)\n","#defining the function \n","def change_list(list1): \n","  list1.append(20) \n","  list1.append(30) \n","  print(\"list inside function = \",list1) \n"," \n","#defining the list \n","list1 = [10,30,40,50] \n"," \n","#calling the function \n","change_list(list1) \n","\n","print(\"list outside function = \",list1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DPBpHFCaU27_","executionInfo":{"status":"ok","timestamp":1659758751074,"user_tz":-330,"elapsed":558,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"4df4c9a9-84ff-46c6-c025-dc4c1498a4a9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["list inside function =  [10, 30, 40, 50, 20, 30]\n","list outside function =  [10, 30, 40, 50, 20, 30]\n"]}]},{"cell_type":"code","source":["def printme(*names):\n","  print(\"type of names = \",type(names))\n","  print()"],"metadata":{"id":"RwUkZz7CU7jP"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def change_string(str):\n","  str=str+\"Hows you\"\n","  print(\"printing the string inside function:\",str)\n","\n","string1=\"hi i am there \"\n","\n","#calling the function\n","change_string(string1)\n","\n","print(\"printing the string outside finction:\",string1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Y16r11IOVrzo","executionInfo":{"status":"ok","timestamp":1659759214678,"user_tz":-330,"elapsed":471,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"9deee6c1-c6f1-4cac-a08e-d2517985cd76"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["printing the string inside function: hi i am there Hows you\n","printing the string outside finction: hi i am there \n"]}]},{"cell_type":"markdown","source":["# Types of argument"],"metadata":{"id":"IC1iJHDUXH0v"}},{"cell_type":"code","source":["# required argument\n","def func(name):\n","  massage = \"hi \"+name\n","  return massage\n","\n","name=input(\"enter the name: \")\n","print(func(name))  "],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"P2NZy_1jW9Bm","executionInfo":{"status":"ok","timestamp":1659759441865,"user_tz":-330,"elapsed":5182,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"aaf4bf7a-1cd8-429c-a9ef-876ac61f3cb5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["enter the name: sanjay\n","hi sanjay\n"]}]},{"cell_type":"code","source":["#the function simple_interest accepts three arguments and returns the simple interest accordingly\n","def simple_interest(p,t,r):\n","  return (p*t*r)/100\n","\n","p=float(input(\"Enter the principal amount = \"))\n","r=float(input(\"Enter the rate of interest = \"))\n","t=float(input(\"Enter the time in years = \"))\n","\n","print(\"simple interest:\",simple_interest(p,r,t))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IGVxAoxgX0bW","executionInfo":{"status":"ok","timestamp":1659759783642,"user_tz":-330,"elapsed":15582,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"c6c6465a-f29d-4229-821d-0290718ea960"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Enter the principal amount = 2000\n","Enter the rate of interest = 2\n","Enter the time in years = 2\n","simple interest: 80.0\n"]}]},{"cell_type":"code","source":["#the function calculate returns the sum of two arguments a and b \n","def calculate(a,b): \n","    return a+b \n","calculate(10) # this causes an error as we are missing a required arguments b. \n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":218},"id":"X_Yji2JdYCQV","executionInfo":{"status":"error","timestamp":1659759837073,"user_tz":-330,"elapsed":643,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"778501f5-bf60-4205-caff-53c949ca2e6c"},"execution_count":null,"outputs":[{"output_type":"error","ename":"TypeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-13-9594fe5a53fd>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0mcalculate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0ma\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mb\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0ma\u001b[0m\u001b[0;34m+\u001b[0m\u001b[0mb\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m \u001b[0mcalculate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m10\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;31m# this causes an error as we are missing a required arguments b.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mTypeError\u001b[0m: calculate() missing 1 required positional argument: 'b'"]}]},{"cell_type":"code","source":["def printme(name,age=22): \n","    print(\"My name is\",name,\"and age is\",age) \n","printme(name = \"john\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bW4YlAq5Za70","executionInfo":{"status":"ok","timestamp":1659759911258,"user_tz":-330,"elapsed":465,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"0ffd229f-c0ed-4361-bf0e-57e5eaec50f6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["My name is john and age is 22\n"]}]},{"cell_type":"code","source":["def printyou(name,age=22):\n","  print(\"my name is\",name,\"and age is\",age)\n","\n","printyou(name=\"john\") \n","\n","printyou(age=10,name=\"David\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"C6T_qVaOZngE","executionInfo":{"status":"ok","timestamp":1659760112519,"user_tz":-330,"elapsed":519,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"38b4f57d-0059-46c0-d84b-4eb6755e57bc"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["my name is john and age is 22\n","my name is David and age is 10\n"]}]},{"cell_type":"code","source":["def printme(*names): \n","    print(\"type of passed argument is \",type(names))\n","    print(names) \n","    print(\"printing the passed arguments...\") \n","    for name in names: \n","        print(name) \n","printme(\"john\",\"David\",\"smith\",\"nick\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EOCQEAFDaZ5X","executionInfo":{"status":"ok","timestamp":1659760265497,"user_tz":-330,"elapsed":7,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"9f09a52e-0595-463b-b7a7-0ceffb26c606"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["type of passed argument is  <class 'tuple'>\n","('john', 'David', 'smith', 'nick')\n","printing the passed arguments...\n","john\n","David\n","smith\n","nick\n"]}]},{"cell_type":"code","source":["#function func is called with the name and message as the keyword arguments \n","def func(name,message): \n","    print(\"printing the message with\",name,\"and \",message) \n"," \n","#name and message is copied with the values John and hello respectively \n","func(name = \"John\",message=\"hello\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6O9i7JNqazej","executionInfo":{"status":"ok","timestamp":1659760319156,"user_tz":-330,"elapsed":9,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"34b3c95b-370b-45e6-99f1-d190372cb037"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["printing the message with John and  hello\n"]}]},{"cell_type":"code","source":["#The function simple_interest(p, t, r) is called with the keyword arguments the order of arguments doesn't matter in this case \n","def simple_interest(p,t,r): \n","    return (p*t*r)/100 \n","print(\"Simple Interest: \",simple_interest(t=10,r=10,p=1900))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IDo5TTQibToT","executionInfo":{"status":"ok","timestamp":1659760426467,"user_tz":-330,"elapsed":683,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"1c92ae1a-953e-4547-a123-9ef95c794a59"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Simple Interest:  1900.0\n"]}]},{"cell_type":"code","source":["# The function simple_interest(p,r,t) is called with the keyword arguments.\n","def simple_interest(p,r,t):\n","  return (p*r*t)/100\n","\n","# doesn't find the exact match of the name of the arguments(keywords)\n","print(\"simple interest:\",simple_interest(time=10,rate=10,principle=1900))  "],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":200},"id":"uUPP89xvbkwX","executionInfo":{"status":"error","timestamp":1659760775048,"user_tz":-330,"elapsed":423,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"de29361d-b92e-4731-fb75-d6437cf65e75"},"execution_count":null,"outputs":[{"output_type":"error","ename":"TypeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-21-9687a36e1688>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;31m# doesn't find the exact match of the name of the arguments(keywords)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 6\u001b[0;31m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"simple interest:\"\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0msimple_interest\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtime\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m10\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mrate\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m10\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mprinciple\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m1900\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mTypeError\u001b[0m: simple_interest() got an unexpected keyword argument 'time'"]}]},{"cell_type":"code","source":["def func(name1,message,name2): \n","    print(\"printing the message with\",name1,\",\",message,\",and\",name2) \n","#the first argument is not the keyword argument \n","func(\"John\",message=\"hello\",name2=\"David\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GXMYPsAwdGxJ","executionInfo":{"status":"ok","timestamp":1659760849519,"user_tz":-330,"elapsed":449,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"91e6978b-7a3b-429c-cafc-46416928dc9b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["printing the message with John , hello ,and David\n"]}]},{"cell_type":"code","source":["def func(name1,message,name2): \n","    print(\"printing the message with\",name1,\",\",message,\",and\",name2) \n","#the first argument is not the keyword argument \n","func(\"John\",message=\"hello\",\"David\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":131},"id":"vQ-RAL6NdUlf","executionInfo":{"status":"error","timestamp":1659760952063,"user_tz":-330,"elapsed":499,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"84158890-863e-407b-c06d-ea90b2b36e4a"},"execution_count":null,"outputs":[{"output_type":"error","ename":"SyntaxError","evalue":"ignored","traceback":["\u001b[0;36m  File \u001b[0;32m\"<ipython-input-24-9adf8a6097ef>\"\u001b[0;36m, line \u001b[0;32m4\u001b[0m\n\u001b[0;31m    func(\"John\",message=\"hello\",\"David\")\u001b[0m\n\u001b[0m                               ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m positional argument follows keyword argument\n"]}]},{"cell_type":"code","source":["#: Many arguments using Keyword argument\n","def food(**kwargs):\n","  print(kwargs)\n","\n","food(a=\"apple\")\n","food(fruits=\"orange\",vagitables=\"carrot\",name=\"sanjay\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nWNYACYNdvsC","executionInfo":{"status":"ok","timestamp":1659761287879,"user_tz":-330,"elapsed":10,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"cda2ba45-d357-425d-f39f-a287a725fcc4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{'a': 'apple'}\n","{'fruits': 'orange', 'vagitables': 'carrot', 'name': 'sanjay'}\n"]}]},{"cell_type":"code","source":["# UTF = unicode transformation formate"],"metadata":{"id":"NScDWSHLdvqL"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def sanjay():\n","  print(\"yes\")\n","print(callable(sanjay))  "],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"C3u1MHKzkJH2","executionInfo":{"status":"ok","timestamp":1659762786745,"user_tz":-330,"elapsed":13,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"51d95fd9-450d-4147-b8a2-ff228524b0e8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["True\n"]}]},{"cell_type":"code","source":["# compile string source to code\n","code_str = 'x=5\\ny=10\\nprint(\"sum =\",x+y)' \n","code= compile(code_str, 'sum.py', 'exec') \n","print(type(code)) \n","exec(code) "],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1DV4wlc-knUo","executionInfo":{"status":"ok","timestamp":1659763220614,"user_tz":-330,"elapsed":373,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"68c038a3-ecd8-472d-e9a2-d26701939bd7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'code'>\n","sum = 15\n"]}]},{"cell_type":"markdown","source":["# python sum()"],"metadata":{"id":"fLPIHJmwopPO"}},{"cell_type":"code","source":["s=sum([1,2,4])\n","print(s)\n","r=sum([1,2,3],4)\n","print(r)"],"metadata":{"id":"YR0LEcGDoeXj","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1660821085998,"user_tz":-330,"elapsed":18,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"a0bcbc81-94ae-4528-ce29-e75b970f8908"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["7\n","10\n"]}]},{"cell_type":"markdown","source":["# python any() "],"metadata":{"id":"bf1pC7Uqpwjy"}},{"cell_type":"code","source":["# The python any() function returns true if any item in an iterable is true. Otherwise, it returns False.\n","\n","l=[4,3,2,0]\n","print(any(l))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WVJLIH04ptz6","executionInfo":{"status":"ok","timestamp":1660821221606,"user_tz":-330,"elapsed":7,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"44f75f9b-4111-4523-fa61-d399ad299f1d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["True\n"]}]},{"cell_type":"code","source":["x=input(\"enter here = \")\n","print(any(map(str.isalpha,x)))\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"K7M5_1KxqNZV","executionInfo":{"status":"ok","timestamp":1660821365797,"user_tz":-330,"elapsed":9286,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"6d62837b-c1f5-4713-92c7-d7c0b6b97bfb"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["enter here = kjasdgD674527\n","True\n"]}]},{"cell_type":"code","source":["A=[0,False]\n","print(any(A))\n","\n","B=[0,False,5]\n","print(any(B))\n","\n","C=[]\n","print(any(C))\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"adkIkgg7rTQz","executionInfo":{"status":"ok","timestamp":1660821699193,"user_tz":-330,"elapsed":829,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"17e24187-4745-400d-86dc-7de6518c03dc"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["False\n","True\n","False\n"]}]},{"cell_type":"markdown","source":["# eval function"],"metadata":{"id":"Hd_7e55fufok"}},{"cell_type":"code","source":["x=8\n","print(eval(\"x+2\"))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"m_yLcxz0uDwY","executionInfo":{"status":"ok","timestamp":1660822971916,"user_tz":-330,"elapsed":629,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"f77aa4c9-0e23-4f1d-d76e-116f2642e9f7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["10\n"]}]},{"cell_type":"markdown","source":["# format()"],"metadata":{"id":"JS3t0EQ0xaZm"}},{"cell_type":"code","source":["# d,f and b are a type\n","\n","# integer\n","\n","print(format(123,\"d\"))\n","\n","# float arguments\n","print(format(123.2383282646,\"f\"))\n","\n","# binary format\n","print(format(12,\"b\"))\n","\n","print(format(1223,\"f\"))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Sgt1Puvsw7So","executionInfo":{"status":"ok","timestamp":1660823489558,"user_tz":-330,"elapsed":640,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"5f098440-75bb-46cb-ce6a-3a03831f5b74"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["123\n","123.238328\n","1100\n","1223.000000\n"]}]},{"cell_type":"markdown","source":["**python getattr() function** ==>\n","The python getattr() function returns the value of a named attribute of an object. If it is not found, it \n","returns the default value."],"metadata":{"id":"DfSaA5c7z-wI"}},{"cell_type":"code","source":["class Details:\n","  age = 22\n","  name = \"phill\"\n","\n","details = Details()\n","print(\"The age is :\",getattr(details,\"age\"))\n","print(\"The age is :\",details.age)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DHSFXIkOzArV","executionInfo":{"status":"ok","timestamp":1660824089822,"user_tz":-330,"elapsed":553,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"32d747a6-2582-49d0-83a6-76a2c9c7e4d7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["The age is : 22\n","The age is : 22\n"]}]},{"cell_type":"markdown","source":["# python globals()"],"metadata":{"id":"buPGUYJq2D7T"}},{"cell_type":"code","source":["#age = 22\n","globals()[\"age\"]=22\n","print(\"The age is :\",age)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RXy0y6qJ2C15","executionInfo":{"status":"ok","timestamp":1660824617877,"user_tz":-330,"elapsed":1041,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"aa7eeef5-a5ba-428c-d86e-7beeff5f983d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["The age is : 22\n"]}]},{"cell_type":"markdown","source":["**iter()** ==>\n","The python iter() function is used to return an iterator object. It creates an object which can be iterated \n","one element at a time."],"metadata":{"id":"exzey6pgaSKX"}},{"cell_type":"code","source":["# list of numbers\n","list=[1,2,3,4,5]\n","\n","listiter=iter(list)\n","print(next(listiter)) # print 1\n","print(next(listiter)) # print 2\n","print(next(listiter)) # print 3\n","print(next(listiter)) # print 4\n","print(next(listiter)) # print 5\n","#print(next(listiter))"],"metadata":{"id":"CXjP86zf3Cpd","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1660884632193,"user_tz":-330,"elapsed":729,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"350f2a9f-1a07-4a63-d274-d880ef96aab8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1\n","2\n","3\n","4\n","5\n"]}]},{"cell_type":"code","source":["# python len()\n","\n","str1 = \"python code\"\n","print(len(str1))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"O7AlrbqzcFKq","executionInfo":{"status":"ok","timestamp":1660884698757,"user_tz":-330,"elapsed":528,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"21aeafe9-82a9-4511-e659-ce909c90a446"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["11\n"]}]},{"cell_type":"code","source":["# empty list\n","print(list())\n","\n","# tuple\n","Tuple=(1,2,3,4,5)\n","print(list(Tuple))\n","\n","# list\n","List = [1,2,3,4,5]\n","print(list(List))\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":235},"id":"asR5skeachPX","executionInfo":{"status":"error","timestamp":1660884898761,"user_tz":-330,"elapsed":440,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"821c8fbe-4e61-4d2b-d653-69c2853b4011"},"execution_count":null,"outputs":[{"output_type":"error","ename":"TypeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-8-68471c33f5bf>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m# empty list\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;31m# tuple\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mTuple\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m3\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m4\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m5\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mTypeError\u001b[0m: 'list' object is not callable"]}]},{"cell_type":"markdown","source":["**python locals()** ==>\n"],"metadata":{"id":"2M3T6Z4RdNkA"}},{"cell_type":"code","source":["def localsAbsent(): \n"," return locals() \n"," \n","def localsPresent(): \n"," present = True \n"," return locals() \n"," \n","print('localsNotPresent:', localsAbsent()) \n","print('localsPresent:', localsPresent())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"e6QjAASHfiJn","executionInfo":{"status":"ok","timestamp":1660885587580,"user_tz":-330,"elapsed":525,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"eefb079b-8b4e-48c6-cdbd-eb2812502d30"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["localsNotPresent: {}\n","localsPresent: {'present': True}\n"]}]},{"cell_type":"markdown","source":["**map()** ==>\n","The python map() function is used to return a list of results after applying a given function to each item \n","of an iterable(list, tuple etc.)."],"metadata":{"id":"gNa-ZsqBhYCB"}},{"cell_type":"code","source":["def calculateAddition(n):\n","  return n+n\n","\n","numbers = (1,2,3,4,5)\n","result = map(calculateAddition,numbers)\n","print(result)\n","\n","# converting map object to set\n","numbersAddition = set(result)\n","print(numbersAddition)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jZOqXW3viHug","executionInfo":{"status":"ok","timestamp":1660886576954,"user_tz":-330,"elapsed":864,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"35e21a1e-cec7-4e3a-a5e3-b342d2d56ee5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<map object at 0x7fb69bfb36d0>\n","{2, 4, 6, 8, 10}\n"]}]},{"cell_type":"markdown","source":["**memoryview()** ==>\n","The python memoryview() function returns a memoryview object of the given argument."],"metadata":{"id":"7PPUVUAzlDbU"}},{"cell_type":"code","source":["# A random bytearray\n","randomByteArray = bytearray(\"ABC\",\"utf-8\")\n","\n","mv = memoryview(randomByteArray)\n","\n","#access the memory view's ze"],"metadata":{"id":"3boD8-2OlbNc"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import numpy as np\n","x=np.zeros((10,10),dtype=int)\n","x"],"metadata":{"id":"GgO9SOVyeDeH","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1665911033879,"user_tz":-330,"elapsed":10,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"268abc7b-c829-4820-c276-0b29eec97c13"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n","       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n","       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n","       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n","       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n","       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n","       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n","       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n","       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n","       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])"]},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["x=np.arange(1,101)\n","x"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RGctxGAuCSdj","executionInfo":{"status":"ok","timestamp":1665911166462,"user_tz":-330,"elapsed":694,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"0e0ff56d-65ca-4b0a-ca00-0e3d7edd93fd"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([  1,   2,   3,   4,   5,   6,   7,   8,   9,  10,  11,  12,  13,\n","        14,  15,  16,  17,  18,  19,  20,  21,  22,  23,  24,  25,  26,\n","        27,  28,  29,  30,  31,  32,  33,  34,  35,  36,  37,  38,  39,\n","        40,  41,  42,  43,  44,  45,  46,  47,  48,  49,  50,  51,  52,\n","        53,  54,  55,  56,  57,  58,  59,  60,  61,  62,  63,  64,  65,\n","        66,  67,  68,  69,  70,  71,  72,  73,  74,  75,  76,  77,  78,\n","        79,  80,  81,  82,  83,  84,  85,  86,  87,  88,  89,  90,  91,\n","        92,  93,  94,  95,  96,  97,  98,  99, 100])"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["x.reshape((10,10))\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3pXslu1FC-Zp","executionInfo":{"status":"ok","timestamp":1665911293539,"user_tz":-330,"elapsed":551,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"cc39720c-e52b-48de-ad3f-89bb267cdadd"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[  1,   2,   3,   4,   5,   6,   7,   8,   9,  10],\n","       [ 11,  12,  13,  14,  15,  16,  17,  18,  19,  20],\n","       [ 21,  22,  23,  24,  25,  26,  27,  28,  29,  30],\n","       [ 31,  32,  33,  34,  35,  36,  37,  38,  39,  40],\n","       [ 41,  42,  43,  44,  45,  46,  47,  48,  49,  50],\n","       [ 51,  52,  53,  54,  55,  56,  57,  58,  59,  60],\n","       [ 61,  62,  63,  64,  65,  66,  67,  68,  69,  70],\n","       [ 71,  72,  73,  74,  75,  76,  77,  78,  79,  80],\n","       [ 81,  82,  83,  84,  85,  86,  87,  88,  89,  90],\n","       [ 91,  92,  93,  94,  95,  96,  97,  98,  99, 100]])"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["# write a program to print identity matrix\n","a=np.identity(3)\n","a"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zsdyZPOnD4tt","executionInfo":{"status":"ok","timestamp":1665911530069,"user_tz":-330,"elapsed":10,"user":{"displayName":"Sanjay Kushwah","userId":"00209585866402972077"}},"outputId":"3f1e1ab4-d909-4bde-fc2b-d77fbec93a95"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1., 0., 0.],\n","       [0., 1., 0.],\n","       [0., 0., 1.]])"]},"metadata":{},"execution_count":7}]}]}